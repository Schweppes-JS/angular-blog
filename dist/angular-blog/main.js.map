{"version":3,"sources":["./src/app/shared/modules/loading/loading.module.ts","./src/app/shared/modules/backendErrorMessages/components/backendErrorMessages.component.ts","./src/app/shared/modules/backendErrorMessages/components/backendErrorMessages.component.html","./src/app/shared/modules/articleForm/components/articleForm/articleForm.component.ts","./src/app/shared/modules/articleForm/components/articleForm/articleForm.component.html","./src/app/shared/modules/tagList/tagList.module.ts","./src/app/auth/store/sync.action.ts","./src/app/shared/services/authInterceprot.service.ts","./src/app/createArticle/store/selectors.ts","./src/app/shared/modules/popularTags/store/reducers.ts","./src/app/editArticle/services/editArticle.service.ts","./src/app/auth/store/actions/getCurrentUser.action.ts","./src/app/shared/modules/feedToggler/feedToggler.module.ts","./src/app/shared/modules/banner/banner.module.ts","./src/app/userProfile/store/effects/getUserProfile.effect.ts","./src/app/createArticle/services/createArticle.service.ts","./src/app/shared/modules/popularTags/services/popularTags.service.ts","./src/app/shared/modules/addToFavorites/store/effects/addToFavorite.effect.ts","./src/app/globalFeed/globalFeed.module.ts","./src/app/shared/modules/popularTags/store/effects/getPopularTags.ts","./src/app/shared/modules/popularTags/store/selectors.ts","./src/app/shared/modules/addToFavorites/services/addToFavorites.service.ts","./src/app/shared/modules/articleForm/articleForm.module.ts","./src/app/createArticle/store/effects/createArticle.effect.ts","./src/app/settings/settings.module.ts","./src/app/settings/components/settings/settings.component.ts","./src/app/settings/components/settings/settings.component.html","./src/app/shared/modules/tagList/components/tagList/tagList.component.ts","./src/app/shared/modules/tagList/components/tagList/tagList.component.html","./src/app/userProfile/userProfile.module.ts","./src/app/auth/store/effects/getCurrentUser.effect.ts","./src/app/shared/modules/addToFavorites/components/addToFavorites/addToFavorites.component.ts","./src/app/shared/modules/addToFavorites/components/addToFavorites/addToFavorites.component.html","./src/app/shared/modules/feed/services/feed.service.ts","./src/environments/environment.ts","./src/app/userProfile/store/actions/getUserProfile.action.ts","./src/app/article/store/selectors.ts","./src/app/shared/modules/pagination/pagination.module.ts","./src/app/auth/store/actionTypes.ts","./src/app/shared/modules/addToFavorites/addToFavorites.module.ts","./src/app/shared/modules/feedToggler/components/feedToggler/feedToggler.component.ts","./src/app/shared/modules/feedToggler/components/feedToggler/feedToggler.component.html","./src/app/editArticle/store/reducers.ts","./src/app/userProfile/store/reducer.ts","./src/app/editArticle/components/editArticle/editArticle.component.ts","./src/app/editArticle/components/editArticle/editArticle.component.html","./src/app/auth/store/actions/updateCurrentUser.action.ts","./src/app/article/store/actions/getArticle.action.ts","./src/app/shared/modules/pagination/components/pagination/pagination.component.ts","./src/app/shared/modules/pagination/components/pagination/pagination.component.html","./src/app/createArticle/store/actions/createArticle.action.ts","./src/app/shared/modules/popularTags/store/actions/getPopularTags.action.ts","./src/app/auth/store/reducers.ts","./src/app/userProfile/components/userProfile/userProfile.component.ts","./src/app/userProfile/components/userProfile/userProfile.component.html","./src/app/auth/services/auth.service.ts","./src/app/article/store/actions/deleteArticle.action.ts","./src/app/userProfile/services/userProfile.service.ts","./src/app/createArticle/components/createArticle/createArticle.component.ts","./src/app/createArticle/components/createArticle/createArticle.component.html","./src/app/settings/store/selectors.ts","./src/app/article/services/article.service.ts","./src/app/auth/components/login/login.component.ts","./src/app/auth/components/login/login.component.html","./src/app/createArticle/createArticle.module.ts","./src/app/article/store/effects/deleteArticle.effect.ts","./src/app/tagFeed/components/tagFeed/tagFeed.component.ts","./src/app/tagFeed/components/tagFeed/tagFeed.component.html","./src/app/editArticle/store/actions/createArticle.action.ts","./src/app/editArticle/store/effects/getArticle.effect.ts","./src/app/createArticle/store/actionTypes.ts","./src/app/article/components/article/article.component.ts","./src/app/article/components/article/article.component.html","./src/app/editArticle/store/actionTypes.ts","./src/app/yourFeed/yourFeed.module.ts","./src/app/tagFeed/tagFeed.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/auth/store/effects/login.effect.ts","./src/app/shared/modules/feed/store/actionTypes.ts","./src/app/editArticle/editArticle.module.ts","./src/app/editArticle/store/effects/updateArticle.effect.ts","./src/app/shared/modules/addToFavorites/store/actionTypes.ts","./src/app/shared/modules/popularTags/popularTags.module.ts","./src/app/auth/auth.module.ts","./src/app/shared/modules/topBar/topBar.module.ts","./src/app/app.module.ts","./src/app/shared/modules/feed/store/reducers.ts","./src/app/userProfile/store/selectors.ts","./src/app/shared/modules/errorMessage/components/errorMessage/errorMessage.component.ts","./src/app/shared/modules/loading/components/loading/loading.component.ts","./src/app/editArticle/store/selectors.ts","./src/app/shared/modules/addToFavorites/store/actions/addToFavorites.action.ts","./src/app/auth/store/effects/updateCurrentUser.effect.ts","./src/app/shared/services/article.service.ts","./src/app/article/store/actionTypes.ts","./src/app/shared/modules/feed/store/selectors.ts","./src/app/article/store/reducers.ts","./src/app/shared/modules/feed/store/effects/getFeed.effect.ts","./src/app/shared/modules/backendErrorMessages/backendErrorMessages.module.ts","./src/app/article/store/effects/getArticle.effect.ts","./src/app/shared/services/utils.service.ts","./src/app/auth/store/selectors.ts","./src/app/shared/modules/errorMessage/errorMessage.module.ts","./src/app/shared/modules/topBar/components/topBar/topBar.component.ts","./src/app/shared/modules/topBar/components/topBar/topBar.component.html","./src/app/auth/store/effects/logout.effect.ts","./src/app/userProfile/store/actionTypes.ts","./src/app/shared/services/persistence.service.ts","./src/app/yourFeed/components/yourFeed/youtFeed.component.ts","./src/app/yourFeed/components/yourFeed/yourFeed.component.html","./src/app/shared/modules/feed/components/feed/feed.component.ts","./src/app/shared/modules/feed/components/feed/feed.component.html","./src/app/article/article.module.ts","./src/app/shared/modules/feed/store/actions/getFeed.action.ts","./src/app/globalFeed/components/globalFeed/globalFeed.component.ts","./src/app/globalFeed/components/globalFeed/globalFeed.component.html","./src/app/shared/modules/popularTags/store/actionTypes.ts","./src/app/settings/store/reducers.ts","./src/app/app-routing.module.ts","./src/app/auth/store/actions/login.action.ts","./src/app/auth/store/effects/register.effect.ts","./src/app/createArticle/store/reducers.ts","./src/app/shared/modules/feed/feed.module.ts","./src/app/auth/components/register/register.component.ts","./src/app/auth/components/register/register.component.html","./src/app/shared/modules/banner/components/banner/banner.component.ts","./src/app/shared/modules/banner/components/banner/banner.component.html","./src/app/auth/store/actions/register.action.ts","./src/main.ts","./src/app/shared/modules/popularTags/components/popularTags/popularTags.component.ts","./src/app/shared/modules/popularTags/components/popularTags/popularTags.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { LoadingComponent } from \"src/app/shared/modules/loading/components/loading/loading.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [LoadingComponent],\r\n  exports: [LoadingComponent]\r\n})\r\n\r\nexport class LoadingModule {\r\n  \r\n}","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { BackendErrorsInterface } from \"src/app/shared/types/backendErrors.interface\";\r\n\r\n@Component({\r\n  selector: \"mc-backend-error-messages\",\r\n  templateUrl: \"./backendErrorMessages.component.html\",\r\n  styleUrls: [\"./backendErrorMessages.component.html\"]\r\n})\r\n\r\nexport class BackendErrorMessagesComponent implements OnInit {\r\n  @Input() backendErrors!: BackendErrorsInterface | null;\r\n\r\n  errorMessages!: string[];\r\n\r\n  ngOnInit(): void {\r\n    this.errorMessages = Object.keys(this.backendErrors!).map((name: string) => {\r\n      const messages = this.backendErrors![name].join(', ')\r\n\r\n      return `${name} ${messages}`\r\n    })\r\n  }\r\n}","<ul class=\"error-messages\">\r\n  <li *ngFor=\"let errorMessage of errorMessages\">{{errorMessage}}</li>\r\n</ul>","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { ArticleInputInterface } from \"src/app/shared/types/articleInput.interface\";\r\nimport { BackendErrorsInterface } from \"src/app/shared/types/backendErrors.interface\";\r\n\r\n@Component({\r\n  selector: \"mc-article-form\",\r\n  templateUrl: \"./articleForm.component.html\"\r\n})\r\nexport class ArticleFormComponent implements OnInit {\r\n  @Input(\"initialValues\") initialValuesProps!: ArticleInputInterface | null;\r\n  @Input(\"isSubmitting\") isSubmittingProps!: boolean | null;\r\n  @Input(\"errors\") errorsProps!: BackendErrorsInterface | null;\r\n\r\n  @Output(\"articleSubmit\") articleSubmitEvent = new EventEmitter<ArticleInputInterface>();\r\n\r\n  form!: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {};\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n  }\r\n\r\n  initializeForm(): void {\r\n    this.form = this.fb.group({\r\n      title: this.initialValuesProps!.title,\r\n      description: this.initialValuesProps!.description,\r\n      body: this.initialValuesProps!.body,\r\n      tagList: this.initialValuesProps!.tagList.join(' ')\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.articleSubmitEvent.emit(this.form.value);\r\n  }\r\n}","<div class=\"editor-page\">\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-10 offset-md-1 col-xs-12\">\r\n        <mc-backend-error-messages *ngIf=\"errorsProps\" [backendErrors]=\"errorsProps\"></mc-backend-error-messages>\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n          <fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Article title\"\r\n                formControlName=\"title\"\r\n              >\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"What is this article about?\"\r\n                formControlName=\"description\"\r\n              >\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <textarea\r\n                class=\"form-control form-control-lg\"\r\n                rows=\"8\"\r\n                placeholder=\"Write your article (in markdown)\"\r\n                formControlName=\"body\"\r\n              ></textarea>\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Enter tags\"\r\n                formControlName=\"tagList\"\r\n              >\r\n            </fieldset>\r\n            <fieldset>\r\n              <button type=\"submit\" class=\"btn btn-lg pull-xs-right btn-primary\" [disabled]=\"form.invalid || isSubmittingProps\">\r\n                Publish article\r\n              </button>\r\n            </fieldset>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { LoadingComponent } from \"src/app/shared/modules/loading/components/loading/loading.component\";\r\nimport { TagListComponent } from \"src/app/shared/modules/tagList/components/tagList/tagList.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [TagListComponent],\r\n  exports: [TagListComponent]\r\n})\r\n\r\nexport class TagListModule {\r\n  \r\n}","import { createAction } from \"@ngrx/store\";\r\nimport { ActionTypes } from \"./actionTypes\";\r\n\r\nexport const logoutAction = createAction(ActionTypes.LOGOUT)","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { PersistanceService } from \"src/app/shared/services/persistence.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceprot implements HttpInterceptor {\r\n  constructor(private persistanceService: PersistanceService) { }\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = this.persistanceService.get(\"accessToken\");\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: token ? `Token ${token}` : \"\"\r\n      }\r\n    });\r\n    return next.handle(request);\r\n  }\r\n}","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { CreateArticleStateInterface } from \"src/app/createArticle/types/createArticleState.interface\";\r\nimport { AppStateInterface } from \"src/app/shared/types/appState.interface\";\r\n\r\nexport const createArticleFeatureSelector = createFeatureSelector<AppStateInterface, CreateArticleStateInterface>(\"createArticle\");\r\n\r\nexport const isSubmittingSelector = createSelector(\r\n  createArticleFeatureSelector, (createArticleState: CreateArticleStateInterface) => createArticleState.isSubmitting);\r\n\r\nexport const validationErrorsSelector = createSelector(\r\n  createArticleFeatureSelector, (createArticleState: CreateArticleStateInterface) => createArticleState.validationErrors);","import { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { getPopularTagsAction, getPopularTagsFailureAction, getPopularTagsSuccessAction } from \"src/app/shared/modules/popularTags/store/actions/getPopularTags.action\";\r\nimport { PopularTagsStateInteface } from \"src/app/shared/modules/popularTags/types/popularTagsState.inteface\";\r\n\r\nconst initialState: PopularTagsStateInteface = {\r\n  data: null,\r\n  isLoading: false,\r\n  error: null\r\n}\r\n\r\nconst popularTagsReducer = createReducer(\r\n  initialState,\r\n  on(\r\n    getPopularTagsAction,\r\n    (state): PopularTagsStateInteface => ({\r\n      ...state,\r\n      isLoading: true\r\n    })\r\n  ),\r\n  on(\r\n    getPopularTagsSuccessAction,\r\n    (state, action): PopularTagsStateInteface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.popularTags\r\n    })\r\n  ),\r\n  on(\r\n    getPopularTagsFailureAction,\r\n    (state): PopularTagsStateInteface => ({\r\n      ...state,\r\n      isLoading: false\r\n    })\r\n  ),\r\n);\r\n\r\nexport function reducers(state: PopularTagsStateInteface, action: Action) {\r\n  return popularTagsReducer(state, action);\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\nimport { ArticleInputInterface } from \"src/app/shared/types/articleInput.interface\";\r\nimport { SaveArticleResponseInterface } from \"src/app/shared/types/saveArticleResponse.interface\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable()\r\nexport class EditArticleService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  updateArticle(slug: string, articleInput: ArticleInputInterface): Observable<ArticleInterface> {\r\n    const fullUrl = `${environment.apiUrl}/articles/${slug}`;\r\n\r\n    return this.http.put<SaveArticleResponseInterface>(fullUrl, articleInput).pipe(\r\n      map((response: SaveArticleResponseInterface) => response.article)\r\n    );\r\n  }\r\n}","import { createAction, props } from \"@ngrx/store\";\r\nimport { ActionTypes } from \"src/app/auth/store/actionTypes\";\r\nimport { CurrentUserInterface } from \"src/app/shared/types/currentUser.interface\";\r\n\r\nexport const getCurrentUserAction = createAction(\r\n  ActionTypes.GET_CURRENT_USER\r\n);\r\n\r\nexport const getCurrentUserSuccessAction = createAction(\r\n  ActionTypes.GET_CURRENT_USER_SUCCESS,\r\n  props<{ currentUser: CurrentUserInterface }>()\r\n);\r\n\r\nexport const getCurrentUserFailureAction = createAction(\r\n  ActionTypes.GET_CURRENT_USER_FAILURE\r\n);","import { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FeedTogglerComponent } from 'src/app/shared/modules/feedToggler/components/feedToggler/feedToggler.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, RouterModule],\r\n    declarations: [FeedTogglerComponent],\r\n    exports: [FeedTogglerComponent],\r\n})\r\nexport class FeedTogglerModule {}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { BannerComponent } from \"src/app/shared/modules/banner/components/banner/banner.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [BannerComponent],\r\n  exports: [BannerComponent]\r\n})\r\n\r\nexport class BannerModule {\r\n  \r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, map, switchMap } from \"rxjs/operators\";\r\nimport { ProfileInterface } from \"src/app/shared/types/profile.interface\";\r\nimport { UserProfileService } from \"src/app/userProfile/services/userProfile.service\";\r\nimport { getUserProfileAction, getUserProfileFailureAction, getUserProfileSuccessAction } from \"src/app/userProfile/store/actions/getUserProfile.action\";\r\n\r\n@Injectable()\r\nexport class GetUserProfileEffect {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private userProfileService: UserProfileService\r\n  ) { }\r\n\r\n  getUserProfile$ = createEffect(() => this.actions$.pipe(\r\n    ofType(getUserProfileAction),\r\n    switchMap(({slug}) => {\r\n      return this.userProfileService.getUserProfile(slug).pipe(\r\n        map((userProfile: ProfileInterface) => {\r\n          return getUserProfileSuccessAction({ userProfile });\r\n        }),\r\n        catchError(() => {\r\n          return of(getUserProfileFailureAction());\r\n        })\r\n      );\r\n    })\r\n  ));\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\nimport { ArticleInputInterface } from \"src/app/shared/types/articleInput.interface\";\r\nimport { SaveArticleResponseInterface } from \"src/app/shared/types/saveArticleResponse.interface\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable()\r\nexport class CreateArticleService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  createArticle(articleInput: ArticleInputInterface): Observable<ArticleInterface> {\r\n    const fullUrl = environment.apiUrl + \"/articles\";\r\n\r\n    return this.http.post<SaveArticleResponseInterface>(fullUrl, articleInput).pipe(\r\n      map((response: SaveArticleResponseInterface) => response.article)\r\n    );\r\n  }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { PopularTagType } from 'src/app/shared/types/popularTag.type';\r\nimport { environment } from 'src/environments/environment';\r\nimport { GetPopularTagsResponseInterface } from '../types/getPoppularTagsRespone.interface';\r\n\r\n@Injectable()\r\nexport class PopularTagsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPopularTags(): Observable<PopularTagType[]> {\r\n    const url = environment.apiUrl + '/tags';\r\n    return this.http.get<GetPopularTagsResponseInterface>(url).pipe(\r\n      map((response) => {\r\n        return response.tags.filter(tag => !tag.includes(\"\\u200C\"))})\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, map, switchMap } from \"rxjs/operators\";\r\nimport { AddToFavoritesService } from \"src/app/shared/modules/addToFavorites/services/addToFavorites.service\";\r\nimport { addToFavoritesActions, addToFavoritesFailureAction, addToFavoritesSuccessAction } from \"src/app/shared/modules/addToFavorites/store/actions/addToFavorites.action\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\n\r\n@Injectable()\r\nexport class AddToFavoritesEffect {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private addToFavoritesService: AddToFavoritesService\r\n  ) { }\r\n\r\n  addToFavorites$ = createEffect(() => this.actions$.pipe(\r\n    ofType(addToFavoritesActions),\r\n    switchMap(({isFavorited, slug}) => {\r\n      const article$ = isFavorited ?\r\n        this.addToFavoritesService.removeFromFavorites(slug) :\r\n        this.addToFavoritesService.addToFavorites(slug)\r\n      return article$.pipe(\r\n        map((article: ArticleInterface) => {\r\n          return addToFavoritesSuccessAction({ article });\r\n        }),\r\n        catchError(() => {\r\n          return of(addToFavoritesFailureAction());\r\n        })\r\n      );\r\n    })\r\n  ));\r\n}","import { FeedTogglerModule } from './../shared/modules/feedToggler/feedToggler.module';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { GlobalFeedComponent } from \"src/app/globalFeed/components/globalFeed/globalFeed.component\";\r\nimport { BannerModule } from \"src/app/shared/modules/banner/banner.module\";\r\nimport { FeedModule } from \"src/app/shared/modules/feed/feed.module\";\r\nimport { PopularTagsModule } from \"src/app/shared/modules/popularTags/popularTags.module\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"\",\r\n    component: GlobalFeedComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FeedModule,\r\n    BannerModule,\r\n    PopularTagsModule,\r\n    FeedTogglerModule\r\n  ],\r\n  declarations: [GlobalFeedComponent]\r\n})\r\nexport class GlobalFeedModule {\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, filter, map, switchMap } from \"rxjs/operators\";\r\nimport { PopularTagsService } from \"src/app/shared/modules/popularTags/services/popularTags.service\";\r\nimport { getPopularTagsAction, getPopularTagsFailureAction, getPopularTagsSuccessAction } from \"src/app/shared/modules/popularTags/store/actions/getPopularTags.action\";\r\nimport { PopularTagType } from \"src/app/shared/types/popularTag.type\";\r\n\r\n@Injectable()\r\nexport class GetPopularTagsEffect {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private popularTagsService: PopularTagsService\r\n  ) { }\r\n \r\n  getPopularTags$ = createEffect(() => this.actions$.pipe(\r\n    ofType(getPopularTagsAction),\r\n    switchMap(() => {\r\n      return this.popularTagsService.getPopularTags().pipe(\r\n        // filter((tag: any) => {\r\n        //   console.log(tag);\r\n        //   return !!tag\r\n          \r\n        // }),\r\n        map((popularTags: PopularTagType[]) => {\r\n          return getPopularTagsSuccessAction({ popularTags });\r\n        }),\r\n        catchError(() => {\r\n          return of(getPopularTagsFailureAction());\r\n        })\r\n      );\r\n    })\r\n  ));\r\n}","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { PopularTagsStateInteface } from \"src/app/shared/modules/popularTags/types/popularTagsState.inteface\";\r\nimport { AppStateInterface } from \"src/app/shared/types/appState.interface\";\r\n\r\nexport const popularTagsFeatureSelector = createFeatureSelector<AppStateInterface, PopularTagsStateInteface>('popularTags');\r\n\r\nexport const popularTagsSelector = createSelector(\r\n  popularTagsFeatureSelector,\r\n  (popularTagState: PopularTagsStateInteface) => popularTagState.data\r\n);\r\n\r\nexport const isLoadingSelector = createSelector(\r\n  popularTagsFeatureSelector,\r\n  (popularTagState: PopularTagsStateInteface) => popularTagState.isLoading\r\n);\r\n\r\nexport const errorSelector = createSelector(\r\n  popularTagsFeatureSelector,\r\n  (popularTagState: PopularTagsStateInteface) => popularTagState.error\r\n);","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\nimport { GetArticleResponseInterface } from \"src/app/shared/types/getArticleResponse.interface\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable()\r\nexport class AddToFavoritesService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addToFavorites(slug: string): Observable<ArticleInterface> {\r\n    const url = this.getUrl(slug);\r\n    return this.http.post<GetArticleResponseInterface>(url, {}).pipe(map(this.getArticle));\r\n  }\r\n\r\n  removeFromFavorites(slug: string): Observable<ArticleInterface> {\r\n    const url = this.getUrl(slug);\r\n    return this.http.delete<GetArticleResponseInterface>(url).pipe(map(this.getArticle));\r\n  }\r\n\r\n  getUrl(slug: string): string {\r\n    return `${environment.apiUrl}/articles/${slug}/favorite`;\r\n  }\r\n\r\n  getArticle(response: GetArticleResponseInterface): ArticleInterface {\r\n    return response.article;\r\n  };\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { ArticleFormComponent } from \"src/app/shared/modules/articleForm/components/articleForm/articleForm.component\";\r\nimport { BackendErrorMessagesModule } from \"src/app/shared/modules/backendErrorMessages/backendErrorMessages.module\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, BackendErrorMessagesModule],\r\n  declarations: [ArticleFormComponent],\r\n  exports: [ArticleFormComponent]\r\n})\r\nexport class ArticleFormModule {}","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { tap } from 'rxjs/operators';\r\nimport { catchError, map, switchMap } from \"rxjs/operators\";\r\nimport { CreateArticleService } from \"src/app/createArticle/services/createArticle.service\";\r\nimport { createArticleAction, createArticleFailureAction, createArticleSuccessAction } from \"src/app/createArticle/store/actions/createArticle.action\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\n\r\n@Injectable()\r\nexport class CreateArticleEffect {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private createArticleService: CreateArticleService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  createArticle$ = createEffect(() => this.actions$.pipe(\r\n    ofType(createArticleAction),\r\n    switchMap(({ articleInput }) => {\r\n      return this.createArticleService.createArticle(articleInput).pipe(\r\n        map((article: ArticleInterface) => {\r\n          return createArticleSuccessAction({ article });\r\n        }),\r\n        catchError((errorResponse: HttpErrorResponse) => {\r\n          return of(createArticleFailureAction({ errors: errorResponse.error.errors }));\r\n        })\r\n      );\r\n    })\r\n  ))\r\n\r\n  redirectAfterCreate$ = createEffect(() => this.actions$.pipe(\r\n    ofType(createArticleSuccessAction),\r\n    tap(({article}) => {\r\n      this.router.navigate(['/articles', article.slug]);\r\n    })\r\n  ), { dispatch: false })\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { SettingsComponent } from \"src/app/settings/components/settings/settings.component\";\r\nimport { reducers } from \"src/app/settings/store/reducers\";\r\nimport { BackendErrorMessagesModule } from \"../shared/modules/backendErrorMessages/backendErrorMessages.module\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"settings\",\r\n    component: SettingsComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [CommonModule,\r\n    RouterModule.forChild(routes),\r\n    StoreModule.forFeature(\"settings\", reducers),\r\n    ReactiveFormsModule,\r\n    BackendErrorMessagesModule\r\n  ],\r\n  declarations: [SettingsComponent]\r\n})\r\nexport class SettingsModule {\r\n\r\n}","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { Observable, Subscription } from \"rxjs\";\r\nimport { filter } from \"rxjs/operators\";\r\nimport { updateCurrentUserAction } from \"src/app/auth/store/actions/updateCurrentUser.action\";\r\nimport { currentUserSelector } from \"src/app/auth/store/selectors\";\r\nimport { logoutAction } from \"src/app/auth/store/sync.action\";\r\nimport { BackendErrorsInterface } from \"src/app/shared/types/backendErrors.interface\";\r\nimport { CurrentUserInterface } from \"src/app/shared/types/currentUser.interface\";\r\nimport { CurrentUserInputInterface } from \"src/app/shared/types/currentUserInput.interface\";\r\nimport { isSubmittingSelector, validationErrorsSelector } from \"../../store/selectors\";\r\n\r\n@Component({\r\n  selector: \"mc-settings\",\r\n  templateUrl: \"./settings.component.html\"\r\n})\r\nexport class SettingsComponent implements OnInit, OnDestroy {\r\n  currentUser!: CurrentUserInterface;\r\n  currentUserSubscription!: Subscription;\r\n  form!: FormGroup;\r\n  isSubmitting$!: Observable<boolean>;\r\n  backendErrors$!: Observable<BackendErrorsInterface | null>;\r\n\r\n  constructor(private fb: FormBuilder, private store: Store) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeListeners();\r\n    this.initializeValues();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.currentUserSubscription.unsubscribe();\r\n  }\r\n\r\n  initializeValues(): void {\r\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector));\r\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector));\r\n  }\r\n\r\n  initializeListeners(): void {\r\n    this.currentUserSubscription = this.store.pipe(\r\n      select(currentUserSelector),\r\n      filter((currentUser: CurrentUserInterface | null) => currentUser !== null))\r\n      .subscribe((currentUser: CurrentUserInterface | null) => {\r\n        this.currentUser = currentUser!;\r\n        this.initializeForm();\r\n      });\r\n  }\r\n\r\n  initializeForm(): void {\r\n    this.form = this.fb.group({\r\n      image: this.currentUser.image,\r\n      username: this.currentUser.username,\r\n      bio: this.currentUser.bio,\r\n      email: this.currentUser.email,\r\n      password: \"\"\r\n    })\r\n  }\r\n\r\n  submit(): void {\r\n    const currentUserInput: CurrentUserInputInterface = {\r\n      ...this.currentUser,\r\n      ...this.form.value\r\n    }\r\n    this.store.dispatch(updateCurrentUserAction({currentUserInput}));\r\n  }\r\n\r\n  logout(): void {\r\n    this.store.dispatch(logoutAction());\r\n  }\r\n}","<div class=\"settings-page\" *ngIf=\"currentUser\">\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n        <h1 class=\"text-xs-center\">Settings</h1>\r\n        <mc-backend-error-messages\r\n          *ngIf=\"backendErrors$ | async\"\r\n          [backendErrors]=\"backendErrors$ | async\"\r\n        ></mc-backend-error-messages>\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n          <fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                formControlName=\"image\"\r\n                placeholder=\"URL of profile picture\"\r\n              >\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                formControlName=\"username\"\r\n                placeholder=\"Username\"\r\n              >\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <textarea\r\n                class=\"form-control form-control-lg\"\r\n                formControlName=\"bio\"\r\n                placeholder=\"Short bio about you\"\r\n              ></textarea>\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                formControlName=\"email\"\r\n                placeholder=\"Email\"\r\n              >\r\n            </fieldset>\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control form-control-lg\"\r\n                formControlName=\"password\"\r\n                placeholder=\"Password\"\r\n              >\r\n            </fieldset>\r\n            <button type=\"submit\" class=\"btn btn-lg btn-primary pull-xs-right\"\r\n              [disabled]=\"form.invalid || (isSubmitting$ | async)\">\r\n              Update settings\r\n            </button>\r\n          </fieldset>\r\n        </form>\r\n        <hr/>\r\n        <button class=\"btn btn-outline-danger\" (click)=\"logout()\">Or click here to logout</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input } from \"@angular/core\";\r\nimport { PopularTagType } from \"src/app/shared/types/popularTag.type\";\r\n\r\n@Component({\r\n  selector: \"mc-tag-list\",\r\n  templateUrl: \"./tagList.component.html\",\r\n})\r\nexport class TagListComponent {\r\n  @Input('tags') tagsProps!: PopularTagType[];\r\n\r\n}","<ul class=\"tag-list\">\r\n  <li *ngFor=\"let tag of tagsProps\" class=\"tag-default tag-pill tag-outline\">\r\n    {{ tag }}\r\n  </li>\r\n</ul>","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { FeedModule } from \"src/app/shared/modules/feed/feed.module\";\r\nimport { UserProfileComponent } from \"src/app/userProfile/components/userProfile/userProfile.component\";\r\nimport { UserProfileService } from \"src/app/userProfile/services/userProfile.service\";\r\nimport { GetUserProfileEffect } from \"src/app/userProfile/store/effects/getUserProfile.effect\";\r\nimport { reducers } from \"src/app/userProfile/store/reducer\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"profiles/:slug\",\r\n    component: UserProfileComponent\r\n  },\r\n  {\r\n    path: \"profiles/:slug/favorites\",\r\n    component: UserProfileComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    EffectsModule.forFeature([GetUserProfileEffect]),\r\n    StoreModule.forFeature(\"userProfile\", reducers),\r\n    FeedModule\r\n  ],\r\n  declarations: [UserProfileComponent],\r\n  providers: [UserProfileService]\r\n})\r\nexport class UserProfileModule {\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, map, switchMap } from \"rxjs/operators\";\r\nimport { AuthService } from \"src/app/auth/services/auth.service\";\r\nimport { getCurrentUserAction, getCurrentUserFailureAction, getCurrentUserSuccessAction } from \"src/app/auth/store/actions/getCurrentUser.action\";\r\nimport { PersistanceService } from \"src/app/shared/services/persistence.service\";\r\nimport { CurrentUserInterface } from \"src/app/shared/types/currentUser.interface\";\r\n\r\n@Injectable()\r\nexport class GetCurrentUserEffect {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private authService: AuthService,\r\n    private persistanceService: PersistanceService\r\n  ) { }\r\n\r\n  getCurrentUser$ = createEffect(() => this.actions$.pipe(\r\n    ofType(getCurrentUserAction),\r\n    switchMap(() => {\r\n      const token = this.persistanceService.get('accessToken');\r\n      if (!token) {\r\n        return of(getCurrentUserFailureAction());\r\n      }\r\n      return this.authService.getCurrentUser().pipe(\r\n        map((currentUser: CurrentUserInterface) => {\r\n          return getCurrentUserSuccessAction({ currentUser });\r\n        }),\r\n        catchError(() => {\r\n          return of(getCurrentUserFailureAction());\r\n        })\r\n      );\r\n    })\r\n  ));\r\n}","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { addToFavoritesActions } from \"src/app/shared/modules/addToFavorites/store/actions/addToFavorites.action\";\r\n\r\n@Component({\r\n  selector: \"mc-add-to-favorites\",\r\n  templateUrl: \"./addToFavorites.component.html\"\r\n})\r\nexport class AddToFavoritesComponent implements OnInit {\r\n  @Input(\"isFavorited\") isFavoritedProps!: boolean;\r\n  @Input(\"favoritesCount\") favoritesCountProps!: number;\r\n  @Input(\"articleSlug\") articleSlugProps!: string;\r\n\r\n  constructor(private store: Store) {}\r\n\r\n  favoritesCount!: number;\r\n  isFavorited!: boolean\r\n\r\n  ngOnInit(): void {\r\n    this.favoritesCount = this.favoritesCountProps;\r\n    this.isFavorited = this.isFavoritedProps;\r\n  }\r\n\r\n  handleLike(): void {\r\n  this.store.dispatch(addToFavoritesActions({isFavorited: this.isFavorited, slug: this.articleSlugProps}))\r\n\r\n    if (this.isFavorited) {\r\n      this.favoritesCount= this.favoritesCount - 1;\r\n    } else {\r\n      this.favoritesCount = this.favoritesCount + 1;\r\n    }\r\n\r\n    this.isFavorited = !this.isFavorited;\r\n  }\r\n}","<button\r\n  (click)=\"handleLike()\"\r\n  [ngClass]=\"{'btn': true, 'btn-sm': true, 'btn-primary': isFavorited, 'btn-outline-primary': !isFavorited}\"\r\n>\r\n  <i class=\"ion-heart\"></i>\r\n  <span>&nbsp; {{ favoritesCount }}</span>\r\n</button>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { GetFeedResponseInterface } from \"src/app/shared/modules/feed/types/getFeedResponse.interfece\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable()\r\nexport class FeedService {\r\n  constructor(private http: HttpClient) {}\r\n  getFeed(url: string): Observable<GetFeedResponseInterface> {\r\n    const fullUrl = environment.apiUrl + url;\r\n\r\n    return this.http.get<GetFeedResponseInterface>(fullUrl);\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  apiUrl: \"https://conduit.productionready.io/api\",\n  limit: 10,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { createAction, props } from \"@ngrx/store\";\r\nimport { ProfileInterface } from \"src/app/shared/types/profile.interface\";\r\nimport { ActionTypes } from \"src/app/userProfile/store/actionTypes\";\r\n\r\nexport const getUserProfileAction = createAction(\r\n  ActionTypes.GET_USER_PROFILE,\r\n  props<{slug: string}>()\r\n);\r\n\r\nexport const getUserProfileSuccessAction = createAction(\r\n  ActionTypes.GET_USER_PROFILE_SUCCESS,\r\n  props<{userProfile: ProfileInterface}>()\r\n);\r\n\r\nexport const getUserProfileFailureAction = createAction(\r\n  ActionTypes.GET_USER_PROFILE_FAILURE\r\n);","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { ArticleStateInterface } from \"src/app/article/types/articleState.inteface\";\r\nimport { AppStateInterface } from \"src/app/shared/types/appState.interface\";\r\n\r\nexport const articleFeatureSelector = createFeatureSelector<AppStateInterface, ArticleStateInterface>('article');\r\n\r\nexport const isLoadingSelector = createSelector(articleFeatureSelector, (articleState: ArticleStateInterface) => articleState.isLoading);\r\n\r\nexport const errorSelector = createSelector(articleFeatureSelector, (articleState: ArticleStateInterface) => articleState.error);\r\n\r\nexport const articleSelector = createSelector(articleFeatureSelector, (articleState: ArticleStateInterface) => articleState.data);","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { PaginationComponent } from \"src/app/shared/modules/pagination/components/pagination/pagination.component\";\r\nimport { UtilService } from \"src/app/shared/services/utils.service\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule],\r\n  declarations: [PaginationComponent],\r\n  exports: [PaginationComponent],\r\n  providers: [UtilService]\r\n})\r\nexport class PaginationModule {\r\n\r\n}","export enum ActionTypes {\r\n  REGISTER = \"[Auth] Register\",\r\n  REGISTER_SUCCESS = \"[Auth] Register success\",\r\n  REGISTER_FAILURE = \"[Auth] Register failure\",\r\n\r\n  LOGIN = \"[Auth] Login\",\r\n  LOGIN_SUCCESS = \"[Auth] Login success\",\r\n  LOGIN_FAILURE = \"[Auth] Login failure\",\r\n\r\n  GET_CURRENT_USER = \"[Auth] Get current user\",\r\n  GET_CURRENT_USER_SUCCESS = \"[Auth] Get current user success\",\r\n  GET_CURRENT_USER_FAILURE = \"[Auth] Get current user failure\",\r\n\r\n  UPDATE_CURRENT_USER = \"[Auth] Update current user\",\r\n  UPDATE_CURRENT_USER_SUCCESS = \"[Auth] Update current user success\",\r\n  UPDATE_CURRENT_USER_FAILURE = \"[Auth] Update current user failure\",\r\n\r\n  LOGOUT = \"[Auth] Logout\"\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { AddToFavoritesComponent } from \"src/app/shared/modules/addToFavorites/components/addToFavorites/addToFavorites.component\";\r\nimport { AddToFavoritesService } from \"src/app/shared/modules/addToFavorites/services/addToFavorites.service\";\r\nimport { AddToFavoritesEffect } from \"src/app/shared/modules/addToFavorites/store/effects/addToFavorite.effect\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, EffectsModule.forFeature([AddToFavoritesEffect])],\r\n  declarations: [AddToFavoritesComponent],\r\n  exports: [AddToFavoritesComponent],\r\n  providers: [AddToFavoritesService]\r\n})\r\nexport class AddToFavoritesModule {}","import { isLoggedInSelector } from './../../../../../auth/store/selectors';\r\nimport { select } from '@ngrx/store';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { Component, Input, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"mc-feed-toggler\",\r\n    templateUrl: \"./feedToggler.component.html\"\r\n})\r\nexport class FeedTogglerComponent implements OnInit {\r\n    @Input(\"tagName\") tagNameProps!: string | null;\r\n\r\n    isLoggedIn$!: Observable<boolean | null>;\r\n\r\n    constructor( private store: Store) {}\r\n\r\n    initializeValue(): void {\r\n        this.isLoggedIn$ = this.store.pipe(select(isLoggedInSelector));\r\n    }\r\n\r\n    ngOnInit() :void {\r\n        this.initializeValue();\r\n    }\r\n}","<div class=\"feed-toggle\">\r\n    <ul class=\"nav nav-pills outline-active\">\r\n        <li class=\"nav-item\" *ngIf=\"isLoggedIn$ | async\">\r\n            <a [routerLink]=\"['/feed']\" class=\"nav-link\" routerLinkActive=\"active\">\r\n                Your feed\r\n            </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a [routerLink]=\"['/']\" class=\"nav-link\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\r\n                Global feed\r\n            </a>\r\n        </li>\r\n        <li class=\"nav-item\" *ngIf=\"tagNameProps\">\r\n            <a [routerLink]=\"['/tags', tagNameProps]\" class=\"nav-link\" routerLinkActive=\"active\">\r\n                <i class=\"ion-pound\"></i>\r\n                {{tagNameProps}}\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</div>","import { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { getArticleAction, getArticleFailureAction, getArticleSuccessAction } from \"src/app/article/store/actions/getArticle.action\";\r\nimport { updateArticleAction, updateArticleFailureAction, updateArticleSuccessAction } from \"src/app/editArticle/store/actions/createArticle.action\";\r\nimport { EditArticleStateInterface } from \"src/app/editArticle/types/editArticleState.interface\";\r\n\r\nconst intialState: EditArticleStateInterface = {\r\n  isLoading: false,\r\n  article: null,\r\n  isSubmitting: false,\r\n  validationErrors: null\r\n}\r\n\r\nconst editArticleReducer = createReducer(\r\n  intialState,\r\n  on(\r\n    updateArticleAction,\r\n    (state): EditArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: true\r\n    })\r\n  ),\r\n  on(\r\n    updateArticleSuccessAction,\r\n    (state): EditArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false\r\n    })\r\n  ),\r\n  on(\r\n    updateArticleFailureAction,\r\n    (state, action): EditArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      validationErrors: action.errors\r\n    })\r\n  ),\r\n  on(\r\n    getArticleAction,\r\n    (state): EditArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: true\r\n    })\r\n  ),\r\n  on(\r\n    getArticleSuccessAction,\r\n    (state, action): EditArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      article: action.article\r\n    })\r\n  ),\r\n  on(\r\n    getArticleFailureAction,\r\n    (state): EditArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false\r\n    })\r\n  )\r\n)\r\n\r\nexport const reducers = (state: EditArticleStateInterface, action: Action) => {\r\n  return editArticleReducer(state, action);\r\n}","import { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { getUserProfileAction, getUserProfileFailureAction, getUserProfileSuccessAction } from \"src/app/userProfile/store/actions/getUserProfile.action\";\r\nimport { UserProfileStateInterface } from \"src/app/userProfile/types/userProfileState.interface\";\r\n\r\nconst initialState: UserProfileStateInterface = {\r\n  isLoading: false,\r\n  error: null,\r\n  data: null\r\n}\r\n\r\nconst userProfileReducer = createReducer(\r\n  initialState,\r\n  on(\r\n    getUserProfileAction,\r\n    (state): UserProfileStateInterface => ({\r\n      ...state,\r\n      isLoading: true\r\n    })\r\n  ),\r\n  on(\r\n    getUserProfileSuccessAction,\r\n    (state, action): UserProfileStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.userProfile\r\n    })\r\n  ),\r\n  on(\r\n    getUserProfileFailureAction,\r\n    (state): UserProfileStateInterface => ({\r\n      ...state,\r\n      isLoading: false\r\n    })\r\n  )\r\n);\r\n\r\nexport function reducers(state: UserProfileStateInterface, action: Action) {\r\n  return userProfileReducer(state, action);\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { filter, map } from \"rxjs/operators\";\r\nimport { getArticleAction } from \"src/app/article/store/actions/getArticle.action\";\r\nimport { createArticleAction } from \"src/app/createArticle/store/actions/createArticle.action\";\r\nimport { isSubmittingSelector, validationErrorsSelector } from \"src/app/createArticle/store/selectors\";\r\nimport { updateArticleAction } from \"src/app/editArticle/store/actions/createArticle.action\";\r\nimport { articleSelector } from \"src/app/editArticle/store/selectors\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\nimport { ArticleInputInterface } from \"src/app/shared/types/articleInput.interface\";\r\nimport { BackendErrorsInterface } from \"src/app/shared/types/backendErrors.interface\";\r\n\r\n@Component({\r\n  selector: \"mc-edit-article\",\r\n  templateUrl: \"./editArticle.component.html\"\r\n})\r\nexport class EditArticleComponent implements OnInit {\r\n  initialValues$!: Observable<ArticleInputInterface>;\r\n  isSubmitting$!: Observable<boolean>;\r\n  isLoading$!: Observable<boolean>;\r\n  backendErrors$!: Observable<BackendErrorsInterface | null>;\r\n  slug!: string | null;\r\n\r\n  constructor(private store: Store, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeValues();\r\n    this.fetchData();\r\n  }\r\n\r\n  initializeValues(): void {\r\n    this.slug = this.route.snapshot.paramMap.get(\"slug\");\r\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector));\r\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector));\r\n    this.initialValues$ = this.store.pipe(\r\n      select(articleSelector),\r\n      filter((article: ArticleInterface | null) => article !== null),\r\n      map((article: ArticleInterface | null) => {\r\n        return {\r\n            title: article!.title,\r\n            description: article!.description,\r\n            body: article!.body,\r\n            tagList: article!.tagList\r\n        }\r\n      }));\r\n  }\r\n\r\n  fetchData(): void {\r\n    this.store.dispatch(getArticleAction({slug: this.slug}));\r\n  }\r\n\r\n  onSubmit(articleInput: ArticleInputInterface): void {\r\n    this.store.dispatch(updateArticleAction({articleInput, slug: this.slug!}));\r\n  }\r\n}","Create Article\r\n<mc-loading *ngIf=\"isLoading$ | async\"></mc-loading>\r\n<mc-article-form\r\n*ngIf=\"initialValues$ | async\"\r\n  [initialValues]=\"initialValues$ | async\"\r\n  [isSubmitting]=\"isSubmitting$ | async\"\r\n  [errors]=\"backendErrors$ | async\"\r\n  (articleSubmit)=\"onSubmit($event)\"\r\n></mc-article-form>","import { createAction, props } from \"@ngrx/store\";\r\nimport { ActionTypes } from \"src/app/auth/store/actionTypes\";\r\nimport { BackendErrorsInterface } from \"src/app/shared/types/backendErrors.interface\";\r\nimport { CurrentUserInterface } from \"src/app/shared/types/currentUser.interface\";\r\nimport { CurrentUserInputInterface } from \"src/app/shared/types/currentUserInput.interface\";\r\n\r\nexport const updateCurrentUserAction = createAction(\r\n  ActionTypes.UPDATE_CURRENT_USER,\r\n  props<{ currentUserInput: CurrentUserInputInterface }>()\r\n);\r\n\r\nexport const updateCurrentUserSuccessAction = createAction(\r\n  ActionTypes.UPDATE_CURRENT_USER_SUCCESS,\r\n  props<{ currentUser: CurrentUserInterface }>()\r\n);\r\n\r\nexport const updateCurrentUserFailureAction = createAction(\r\n  ActionTypes.UPDATE_CURRENT_USER_FAILURE,\r\n  props<{ errors: BackendErrorsInterface }>()\r\n);","import { createAction, props } from \"@ngrx/store\";\r\nimport { ActionTypes } from \"../actionTypes\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\n\r\nexport const getArticleAction = createAction(\r\n  ActionTypes.GET_ARTICLE, \r\n  props<{slug: string | null}>()\r\n)\r\n\r\nexport const getArticleSuccessAction = createAction(\r\n  ActionTypes.GET_ARTICLE_SUCCESS, \r\n  props<{article: ArticleInterface}>()\r\n)\r\n\r\nexport const getArticleFailureAction = createAction(\r\n  ActionTypes.GET_ARTICLE_FAILURE\r\n)","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { UtilService } from \"src/app/shared/services/utils.service\";\r\n\r\n@Component({\r\n  selector: \"mc-pagination\",\r\n  templateUrl: \"./pagination.component.html\",\r\n  styleUrls: [\"./pagination.component.scss\"]\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n\r\n  constructor(private utilsService: UtilService) {}\r\n\r\n  @Input(\"total\") totalProps!: number | undefined;\r\n  @Input(\"limit\") limitProps!: number;\r\n  @Input(\"currentPage\") currentPageProps!: number;\r\n  @Input(\"url\") urlProps!: string;\r\n\r\n  pagesCount!: number;\r\n  pages!: number[];\r\n\r\n  ngOnInit(): void {\r\n    this.pagesCount = Math.ceil(this.totalProps! / this.limitProps);\r\n    this.pages = this.utilsService.range(1, this.pagesCount);\r\n  }\r\n}","<ul class=\"pagination\">\r\n  <li *ngFor=\"let page of pages\" class=\"page-item\" [ngClass]=\"{active: currentPageProps === page}\">\r\n    <a [routerLink]=\"urlProps\" class=\"page-link\" [queryParams]=\"{page: page}\">\r\n      {{ page }}\r\n    </a>\r\n  </li>\r\n</ul>\r\n","import { createAction, props } from \"@ngrx/store\";\r\nimport { ActionTypes } from \"src/app/createArticle/store/actionTypes\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\nimport { ArticleInputInterface } from \"src/app/shared/types/articleInput.interface\";\r\nimport { BackendErrorsInterface } from \"src/app/shared/types/backendErrors.interface\";\r\n\r\nexport const createArticleAction = createAction(\r\n  ActionTypes.CREATE_ARTICLE,\r\n  props<{articleInput: ArticleInputInterface}>()\r\n);\r\n\r\nexport const createArticleSuccessAction = createAction(\r\n  ActionTypes.CREATE_ARTICLE_SUCCESS,\r\n  props<{article: ArticleInterface}>()\r\n);\r\n\r\nexport const createArticleFailureAction = createAction(\r\n  ActionTypes.CREATE_ARTICLE_FAILURE,\r\n  props<{errors: BackendErrorsInterface}>()\r\n);","import { createAction, props } from \"@ngrx/store\";\r\nimport { ActionTypes } from \"src/app/shared/modules/popularTags/store/actionTypes\";\r\nimport { PopularTagType } from \"src/app/shared/types/popularTag.type\";\r\n\r\nexport const getPopularTagsAction = createAction(ActionTypes.GET_POPULAR_TASGS);\r\n\r\nexport const getPopularTagsSuccessAction = createAction(\r\n  ActionTypes.GET_POPULAR_TASGS_SUCCESS,\r\n  props<{popularTags: PopularTagType[]}>()\r\n);\r\n\r\nexport const getPopularTagsFailureAction = createAction(ActionTypes.GET_POPULAR_TASGS_FAILURE);","import { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { getCurrentUserAction, getCurrentUserFailureAction, getCurrentUserSuccessAction } from \"src/app/auth/store/actions/getCurrentUser.action\";\r\nimport { loginAction, loginFailureAction, loginSuccessAction } from \"src/app/auth/store/actions/login.action\";\r\nimport { registerAction, registerFailureAction, registerSuccessAction } from \"src/app/auth/store/actions/register.action\";\r\nimport { updateCurrentUserSuccessAction } from \"src/app/auth/store/actions/updateCurrentUser.action\";\r\nimport { AuthStateInterface } from \"src/app/auth/types/authState.interface\";\r\nimport { logoutAction } from \"./sync.action\";\r\n\r\nconst initialState: AuthStateInterface = {\r\n  isSubmitting: false,\r\n  isLoading: false,\r\n  currentUser: null,\r\n  isLoggedIn: null,\r\n  validationErrors: null\r\n}\r\n\r\nconst authReducer = createReducer(\r\n  initialState,\r\n  on(\r\n    registerAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n      validationErrors: null\r\n    })\r\n  ),\r\n  on(\r\n    registerSuccessAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      isLoggedIn: true,\r\n      currentUser: action.currentUser\r\n    })\r\n  ),\r\n  on(\r\n    registerFailureAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      validationErrors: action.errors\r\n    })\r\n  ),\r\n  on(\r\n    loginAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: true,\r\n      validationErrors: null\r\n    })\r\n  ),\r\n  on(\r\n    loginSuccessAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      currentUser: action.currentUser,\r\n      isLoggedIn: true\r\n    })\r\n  ),\r\n  on(\r\n    loginFailureAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      validationErrors: action.errors\r\n    })\r\n  ),\r\n  on(\r\n    getCurrentUserAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isLoading: true\r\n    })\r\n  ),\r\n  on(\r\n    getCurrentUserSuccessAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      isLoggedIn: true,\r\n      currentUser: action.currentUser\r\n    })\r\n  ),\r\n  on(\r\n    getCurrentUserFailureAction,\r\n    (state): AuthStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      isLoggedIn: false,\r\n      currentUser: null\r\n    })\r\n  ),\r\n  on(\r\n    updateCurrentUserSuccessAction,\r\n    (state, action): AuthStateInterface => ({\r\n      ...state,\r\n      currentUser: action.currentUser\r\n    })\r\n  ),\r\n  on(\r\n    logoutAction,\r\n    (): AuthStateInterface => ({\r\n      ...initialState,\r\n      isLoggedIn: false\r\n    })\r\n  )\r\n)\r\n\r\nexport function reducers(state: AuthStateInterface, action: Action) {\r\n  return authReducer(state, action);\r\n}","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { combineLatest, Observable, Subscription } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { currentUserSelector } from \"src/app/auth/store/selectors\";\r\nimport { CurrentUserInterface } from \"src/app/shared/types/currentUser.interface\";\r\nimport { ProfileInterface } from \"src/app/shared/types/profile.interface\";\r\nimport { getUserProfileAction } from \"src/app/userProfile/store/actions/getUserProfile.action\";\r\nimport { isLoadingSelector, userProfileSelector } from \"src/app/userProfile/store/selectors\";\r\n\r\n@Component({\r\n  selector: \"mc-user-profile\",\r\n  templateUrl: \"./userProfile.component.html\"\r\n})\r\nexport class UserProfileComponent implements OnInit, OnDestroy {\r\n  userProfile!: ProfileInterface;\r\n  isLoading$!: Observable<boolean>;\r\n  error$!: Observable<string | null>;\r\n  userProfileSubscription!: Subscription;\r\n  slug!: string;\r\n  apiUrl!: string;\r\n  isCurrentUserProfile$!: Observable<boolean>;\r\n\r\n  constructor(private store: Store, private route: ActivatedRoute, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeValues();\r\n    this.initializeListeners();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.userProfileSubscription.unsubscribe();\r\n  }\r\n\r\n  initializeListeners(): void {\r\n    this.userProfileSubscription = this.store.pipe(select(userProfileSelector)).subscribe((userProfile: ProfileInterface | null) => {\r\n      this.userProfile = userProfile!;\r\n    });\r\n\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.slug = params.slug;\r\n      this.fetchUserProfile();\r\n      console.log(params)\r\n    })\r\n  }\r\n\r\n  initializeValues(): void {\r\n    const isFavorites = this.router.url.includes(\"favorites\");\r\n    this.slug = this.route.snapshot.paramMap.get(\"slug\")!;\r\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector));\r\n    this.apiUrl = isFavorites ? `/articles?favorited=${this.slug}` : `/articles?author=${this.slug}`;\r\n    this.isCurrentUserProfile$ = combineLatest([\r\n      this.store.pipe(select(currentUserSelector)),\r\n      this.store.pipe(select(userProfileSelector))\r\n    ]).pipe(map(([currentUser, userProfile]: [CurrentUserInterface | null, ProfileInterface | null]) => {\r\n        return currentUser?.username === userProfile?.username;\r\n    }))\r\n  }\r\n\r\n  fetchUserProfile(): void {\r\n    this.store.dispatch(getUserProfileAction({slug: this.slug}));\r\n  }\r\n\r\n  getApiUrl(): string {\r\n    const isFavorites = this.router.url.includes(\"favorites\");\r\n    return this.apiUrl = isFavorites ? `/articles?favorited=${this.slug}` : `/articles?author=${this.slug}`;\r\n  }\r\n\r\n}","<div class=\"profile-page\" *ngIf=\"userProfile\">\r\n  <div class=\"user-info\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-cs-12 col-md-10 offset-md-1\">\r\n          <img src=\"user-image\" [src]=\"userProfile.image\">\r\n          <h4>{{ userProfile.username }}</h4>\r\n          <p>{{ userProfile.bio }}</p>\r\n          <div>\r\n            FOLLOW USER BUTTON\r\n            <a class=\"btn btn-sm btn-outline-secondary action-btn\" [routerLink]=\"['/settings']\" *ngIf=\"isCurrentUserProfile$ | async\">\r\n              Edit profile Settings\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-12 col-md-10 offset-md-1\">\r\n        <div class=\"articles-toggle\">\r\n          <ul class=\"nav nav-pills outline-active\">\r\n            <li class=\"nav-item\">\r\n              <a\r\n                [routerLink]=\"['/profiles', userProfile.username]\"\r\n                class=\"nav-link\"\r\n                routerLinkActive=\"active\"\r\n                [routerLinkActiveOptions]=\"{exact: true}\"\r\n              >\r\n                My Post\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a\r\n                [routerLink]=\"['/profiles', userProfile.username, 'favorites']\"\r\n                class=\"nav-link\"\r\n                routerLinkActive=\"active\"\r\n                [routerLinkActiveOptions]=\"{exact: true}\"\r\n              >\r\n                Favorites Posts\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <mc-feed [apiUrl]=\"getApiUrl()\"></mc-feed>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { environment } from \"src/environments/environment\";\r\nimport { AuthResponseInterface } from \"src/app/auth/types/authResponse.interface\";\r\nimport { RegisterRequestInterface } from \"src/app/auth/types/registerRequest.interface\";\r\nimport { CurrentUserInterface } from \"src/app/shared/types/currentUser.interface\";\r\nimport { LoginRequestInterface } from \"src/app/auth/types/loginRequest.interface\";\r\nimport { CurrentUserInputInterface } from \"src/app/shared/types/currentUserInput.interface\";\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUser(response: AuthResponseInterface): CurrentUserInterface {\r\n    return response.user;\r\n  }\r\n\r\n  register(data: RegisterRequestInterface): Observable<CurrentUserInterface> {\r\n    const url = environment.apiUrl + \"/users\";\r\n    return this.http.post<AuthResponseInterface>(url, data).pipe(map(this.getUser))\r\n  }\r\n\r\n  login(data: LoginRequestInterface): Observable<CurrentUserInterface> {\r\n    const url = environment.apiUrl + \"/users/login\";\r\n    return this.http.post<AuthResponseInterface>(url, data).pipe(map(this.getUser))\r\n  }\r\n\r\n  getCurrentUser(): Observable<CurrentUserInterface> {\r\n    const url = environment.apiUrl + \"/user\";\r\n    return this.http.get<AuthResponseInterface>(url).pipe(map(this.getUser));\r\n  }\r\n\r\n  updateCurrentUser(currentUserInput: CurrentUserInputInterface): Observable<CurrentUserInterface> {\r\n    const url = environment.apiUrl + \"/user\";\r\n\r\n    return this.http.put<AuthResponseInterface>(url, currentUserInput).pipe(map(this.getUser));\r\n  }\r\n}","import { createAction, props } from \"@ngrx/store\";\r\nimport { ActionTypes } from \"../actionTypes\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\n\r\nexport const deleteArticleAction = createAction(\r\n  ActionTypes.DELETE_ARTICLE, \r\n  props<{slug: string | null}>()\r\n)\r\n\r\nexport const deleteArticleSuccessAction = createAction(\r\n  ActionTypes.DELETE_ARTICLE_SUCCESS\r\n)\r\n\r\nexport const deleteArticleFailureAction = createAction(\r\n  ActionTypes.DELETE_ARTICLE_FAILURE\r\n)","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { ProfileInterface } from \"src/app/shared/types/profile.interface\";\r\nimport { GetUserProfileResponseInterface } from \"src/app/userProfile/types/getUserProfileResponse.interface\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable()\r\nexport class UserProfileService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserProfile(slug: string): Observable<ProfileInterface> {\r\n    const url = `${environment.apiUrl}/profiles/${slug}`;\r\n\r\n    return this.http.get<GetUserProfileResponseInterface>(url).pipe(\r\n      map((response: GetUserProfileResponseInterface) => response.profile)\r\n    );\r\n  }\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { createArticleAction } from \"src/app/createArticle/store/actions/createArticle.action\";\r\nimport { isSubmittingSelector, validationErrorsSelector } from \"src/app/createArticle/store/selectors\";\r\nimport { ArticleInputInterface } from \"src/app/shared/types/articleInput.interface\";\r\nimport { BackendErrorsInterface } from \"src/app/shared/types/backendErrors.interface\";\r\n\r\n@Component({\r\n  selector: \"mc-create-article\",\r\n  templateUrl: \"./createArticle.component.html\"\r\n})\r\nexport class CreateArticleComponent implements OnInit {\r\n  initialValues: ArticleInputInterface = {\r\n    title: \"\",\r\n    description: \"\",\r\n    body: \"\",\r\n    tagList: []\r\n  }\r\n\r\n  isSubmitting$!: Observable<boolean>;\r\n  backendErrors$!: Observable<BackendErrorsInterface | null>;\r\n\r\n  constructor(private store: Store) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector));\r\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector));\r\n  }\r\n\r\n  onSubmit(articleInput: ArticleInputInterface): void {\r\n    this.store.dispatch(createArticleAction({articleInput}));\r\n  }\r\n}","<mc-article-form\r\n  [initialValues]=\"initialValues\"\r\n  [isSubmitting]=\"isSubmitting$ | async\"\r\n  [errors]=\"backendErrors$ | async\"\r\n  (articleSubmit)=\"onSubmit($event)\"\r\n></mc-article-form>","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { SettingsStateInterface } from \"src/app/settings/types/settingsState.interface\";\r\nimport { AppStateInterface } from \"src/app/shared/types/appState.interface\";\r\n\r\nexport const settingsFeatureSelector = createFeatureSelector<AppStateInterface, SettingsStateInterface>('settings');\r\n\r\nexport const isSubmittingSelector = createSelector(settingsFeatureSelector, (settingsState: SettingsStateInterface) => settingsState.isSubmitting);\r\n\r\nexport const validationErrorsSelector = createSelector(settingsFeatureSelector, (settingsState: SettingsStateInterface) => settingsState.validationErrors);","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable()\r\nexport class ArticleService {\r\n  constructor(private http: HttpClient) {}\r\n  deleteArticle(slug: string | null): Observable<{}> {\r\n    const url = `${environment.apiUrl}/articles/${slug}`;\r\n    return this.http.delete<{}>(url);\r\n  }\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"src/app/auth/services/auth.service\";\r\nimport { loginAction } from \"src/app/auth/store/actions/login.action\";\r\nimport { isSubmittingSelector, validationErrorsSelector } from \"src/app/auth/store/selectors\";\r\nimport { LoginRequestInterface } from \"src/app/auth/types/loginRequest.interface\";\r\nimport { BackendErrorsInterface } from \"src/app/shared/types/backendErrors.interface\";\r\n\r\n@Component({\r\n  selector: \"mc-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"]\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  public form!: FormGroup;\r\n  isSubmitting$!: Observable<boolean>;\r\n  backendErrors$!: Observable<BackendErrorsInterface | null>\r\n\r\n  constructor(private fb: FormBuilder, private store: Store, private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.initializeValues();\r\n  }\r\n\r\n  initializeValues(): void {\r\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector));\r\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector))\r\n  }\r\n\r\n  initializeForm(): void {\r\n    this.form = this.fb.group({\r\n      email: '',\r\n      password: ''\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const request: LoginRequestInterface = {\r\n      user: this.form.value\r\n    }\r\n    this.store.dispatch(loginAction({ request }));\r\n  }\r\n}","<div class=\"auth-page\">\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n        <h1 class=\"text-xs-center\">Sigh Up</h1>\r\n          <p class=\"text-xs-center\">\r\n            <a [routerLink]=\"['/register']\">Need an account?</a>\r\n          </p>\r\n          <mc-backend-error-messages\r\n            *ngIf=\"backendErrors$ | async\"\r\n            [backendErrors]=\"backendErrors$ | async\">\r\n          </mc-backend-error-messages>\r\n          <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <fieldset>\r\n              <fieldset class=\"form-group\">\r\n                <input\r\n                type=\"email\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Email\"\r\n                formControlName=\"email\"\r\n              >\r\n              </fieldset>\r\n              <fieldset class=\"form-group\">\r\n                <input\r\n                type=\"password\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Password\"\r\n                formControlName=\"password\"\r\n              >\r\n              </fieldset>\r\n              <button class=\"btn btn-lg btn-primary pull-xs-right\" type=\"submit\"\r\n              [disabled]=\"isSubmitting$ | async\">Sign In</button>\r\n            </fieldset>\r\n          </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { CreateArticleComponent } from \"src/app/createArticle/components/createArticle/createArticle.component\";\r\nimport { CreateArticleService } from \"src/app/createArticle/services/createArticle.service\";\r\nimport { CreateArticleEffect } from \"src/app/createArticle/store/effects/createArticle.effect\";\r\nimport { reducers } from \"src/app/createArticle/store/reducers\";\r\nimport { ArticleFormModule } from \"src/app/shared/modules/articleForm/articleForm.module\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"articles/new\",\r\n    component: CreateArticleComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ArticleFormModule,\r\n    EffectsModule.forFeature([CreateArticleEffect]),\r\n    StoreModule.forFeature(\"createArticle\", reducers)\r\n  ],\r\n  declarations: [CreateArticleComponent],\r\n  providers: [CreateArticleService]\r\n})\r\nexport class CreateArticleModule {}","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, map, switchMap, tap } from \"rxjs/operators\";\r\nimport { ArticleService } from \"src/app/article/services/article.service\";\r\nimport { deleteArticleAction, deleteArticleFailureAction, deleteArticleSuccessAction } from \"src/app/article/store/actions/deleteArticle.action\";\r\n\r\n@Injectable()\r\nexport class DeleteArticleEffect {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private actions$: Actions,\r\n    private articleService: ArticleService\r\n  ) { }\r\n\r\n  deleteArticle$ = createEffect(() => this.actions$.pipe(\r\n    ofType(deleteArticleAction),\r\n    switchMap(({slug}) => {\r\n      return this.articleService.deleteArticle(slug).pipe(\r\n        map(() => {\r\n          return deleteArticleSuccessAction();\r\n        }),\r\n        catchError(() => {\r\n          return of(deleteArticleFailureAction());\r\n        })\r\n      );\r\n    })\r\n  ));\r\n\r\n  redirectAfterDelete$ = createEffect(\r\n    () => this.actions$.pipe(\r\n      ofType(deleteArticleSuccessAction),\r\n      tap(() => {\r\n        this.router.navigate([\"/\"])\r\n      })\r\n    ),\r\n    {dispatch: false}\r\n  )\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Params } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"mc-tag-feed\",\r\n  templateUrl: \"./tagFeed.component.html\",\r\n  styleUrls: [\"./tagFeed.component.scss\"]\r\n})\r\nexport class TagFeedComponent implements OnInit{\r\n  tagName!: string | null;\r\n  apiUrl!: string;\r\n\r\n  constructor(private route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe((params: Params) => {\r\n      this.tagName = params.slug;\r\n      this.apiUrl = `/articles?tag=${this.tagName}`;\r\n    })\r\n  }\r\n}","<div class=\"home-page\">\r\n  <mc-banner></mc-banner>\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-9\">\r\n        <mc-feed-toggler [tagName]=\"tagName\"></mc-feed-toggler>\r\n        <mc-feed [apiUrl]=\"apiUrl\"></mc-feed>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <mc-popular-tags></mc-popular-tags>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { createAction, props } from \"@ngrx/store\";\r\nimport { ActionTypes } from \"src/app/editArticle/store/actionTypes\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\nimport { ArticleInputInterface } from \"src/app/shared/types/articleInput.interface\";\r\nimport { BackendErrorsInterface } from \"src/app/shared/types/backendErrors.interface\";\r\n\r\nexport const updateArticleAction = createAction(\r\n  ActionTypes.UPDATE_ARTICLE,\r\n  props<{slug: string, articleInput: ArticleInputInterface}>()\r\n);\r\n\r\nexport const updateArticleSuccessAction = createAction(\r\n  ActionTypes.UPDATE_ARTICLE_SUCCESS,\r\n  props<{article: ArticleInterface}>()\r\n);\r\n\r\nexport const updateArticleFailureAction = createAction(\r\n  ActionTypes.UPDATE_ARTICLE_FAILURE,\r\n  props<{errors: BackendErrorsInterface}>()\r\n);","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { tap } from 'rxjs/operators';\r\nimport { catchError, map, switchMap } from \"rxjs/operators\";\r\nimport { EditArticleService } from \"src/app/editArticle/services/editArticle.service\";\r\nimport { updateArticleAction, updateArticleFailureAction, updateArticleSuccessAction } from \"src/app/editArticle/store/actions/createArticle.action\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\n\r\n@Injectable()\r\nexport class UpdateArticleEffect {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private editArticleService: EditArticleService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  updateArticle$ = createEffect(() => this.actions$.pipe(\r\n    ofType(updateArticleAction),\r\n    switchMap(({ articleInput, slug }) => {\r\n      return this.editArticleService.updateArticle(slug, articleInput).pipe(\r\n        map((article: ArticleInterface) => {\r\n          return updateArticleSuccessAction({ article });\r\n        }),\r\n        catchError((errorResponse: HttpErrorResponse) => {\r\n          return of(updateArticleFailureAction({ errors: errorResponse.error.errors }));\r\n        })\r\n      );\r\n    })\r\n  ))\r\n\r\n  redirectAfterUpdate$ = createEffect(() => this.actions$.pipe(\r\n    ofType(updateArticleSuccessAction),\r\n    tap(({article}) => {\r\n      this.router.navigate(['/articles', article.slug]);\r\n    })\r\n  ), { dispatch: false })\r\n}","export enum ActionTypes {\r\n  CREATE_ARTICLE = \"[Create Article] Create Article\",\r\n  CREATE_ARTICLE_SUCCESS = \"[Create Article] Create Article success\",\r\n  CREATE_ARTICLE_FAILURE = \"[Create Article] Create Article failure\",\r\n  UPADATE_ARTICLE = \"UPADATE_ARTICLE\"\r\n}","import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { combineLatest, Observable, Subscription } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { deleteArticleAction } from \"src/app/article/store/actions/deleteArticle.action\";\r\nimport { getArticleAction } from \"src/app/article/store/actions/getArticle.action\";\r\nimport { articleSelector, errorSelector, isLoadingSelector } from \"src/app/article/store/selectors\";\r\nimport { currentUserSelector } from \"src/app/auth/store/selectors\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\nimport { CurrentUserInterface } from \"src/app/shared/types/currentUser.interface\";\r\n\r\n@Component({\r\n  selector: \"mc-article\",\r\n  templateUrl: \"./article.component.html\",\r\n  styleUrls: [\"./article.component.scss\"]\r\n})\r\nexport class ArticleComponent implements OnInit, OnDestroy {\r\n  slug!: string | null;\r\n  article!: ArticleInterface | null;\r\n  articleSubscription!: Subscription;\r\n  isLoading$!: Observable<boolean>;\r\n  error$!: Observable<string | null>;\r\n  isAuthor$!: Observable<boolean>;\r\n\r\n  constructor(private store: Store, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeValues();\r\n    this.initializeListeners();\r\n    this.fetchData();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.articleSubscription.unsubscribe();\r\n  }\r\n\r\n  initializeValues() :void {\r\n    this.slug = this.route.snapshot.paramMap.get(\"slug\");\r\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector));\r\n    this.error$ = this.store.pipe(select(errorSelector));\r\n    this.isAuthor$ = combineLatest(\r\n      this.store.pipe(select(articleSelector)),\r\n      this.store.pipe(select(currentUserSelector))\r\n    ).pipe(map(([article, currentUser]: [ArticleInterface | null, CurrentUserInterface | null]) => {\r\n      if (!article || !currentUser) {\r\n        return false;\r\n      }\r\n      return currentUser.username === article.author.username;\r\n    }))\r\n  }\r\n\r\n  initializeListeners(): void {\r\n    this.articleSubscription = this.store.pipe(select(articleSelector)).subscribe((article: ArticleInterface | null) => {\r\n      this.article = article;\r\n    })\r\n  }\r\n\r\n  fetchData(): void {\r\n    this.store.dispatch(getArticleAction({slug: this.slug}))\r\n  }\r\n\r\n  deleteArticle(): void {\r\n    this.store.dispatch(deleteArticleAction({slug: this.slug}));\r\n  }\r\n}\r\n","<div class=\"article-page\">\r\n  <div class=\"banner\">\r\n    <div class=\"container\" *ngIf=\"article\">\r\n      <h1>{{article.title}}</h1>\r\n      <div class=\"article-meta\">\r\n        <a [routerLink]=\"['/profiles', article.author.username]\">\r\n          <img [src]=\"article.author.image\">\r\n        </a>\r\n        <div class=\"info\">\r\n          <a [routerLink]=\"['/profiles', article.author.username]\">\r\n            {{article.author.username}}\r\n          </a>\r\n          <span class=\"data\">\r\n            {{article.createdAt}}\r\n          </span>\r\n        </div>\r\n        <span *ngIf=\"isAuthor$ | async\">\r\n          <a [routerLink]=\"['/articles', article.slug, 'edit']\" class=\"btn btn-outline-secondary btn-sm\">\r\n            <i class=\"ion-edit\"></i>\r\n            Edit Article\r\n          </a>\r\n          <button class=\"btn btn-outline-danger btn-sm\" (click)=\"deleteArticle()\">Delete Article</button>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"container page\">\r\n    <mc-loading *ngIf=\"isLoading$ | async\"></mc-loading>\r\n    <mc-error-message *ngIf=\"error$ | async\"></mc-error-message>\r\n\r\n    <div class=\"row article-content\" *ngIf=\"article\">\r\n      <div class=\"col-xs-12\">\r\n        <div>\r\n          <p>{{article.body}}</p>\r\n        </div>\r\n        <mc-tag-list [tags]=\"article.tagList\"></mc-tag-list>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","export enum ActionTypes {\r\n  UPDATE_ARTICLE =\"[Edit Article] Update Article\",\r\n  UPDATE_ARTICLE_SUCCESS =\"[Edit Article] Update Article success\",\r\n  UPDATE_ARTICLE_FAILURE =\"[Edit Article] Update Article failure\",\r\n\r\n  GET_ARTICLE =\"[Edit Article] Get Article\",\r\n  GET_ARTICLE_SUCCESS =\"[Edit Article] Get Article success\",\r\n  GET_ARTICLE_FAILURE =\"[Edit Article] Get Article failure\"\r\n}","import { FeedTogglerModule } from '../shared/modules/feedToggler/feedToggler.module';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { BannerModule } from \"src/app/shared/modules/banner/banner.module\";\r\nimport { FeedModule } from \"src/app/shared/modules/feed/feed.module\";\r\nimport { PopularTagsModule } from \"src/app/shared/modules/popularTags/popularTags.module\";\r\nimport { YourFeedComponent } from \"src/app/yourFeed/components/yourFeed/youtFeed.component\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"feed\",\r\n    component: YourFeedComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FeedModule,\r\n    BannerModule,\r\n    PopularTagsModule,\r\n    FeedTogglerModule\r\n  ],\r\n  declarations: [YourFeedComponent]\r\n})\r\nexport class YourFeedModule {\r\n\r\n}","import { FeedTogglerModule } from '../shared/modules/feedToggler/feedToggler.module';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { BannerModule } from \"src/app/shared/modules/banner/banner.module\";\r\nimport { FeedModule } from \"src/app/shared/modules/feed/feed.module\";\r\nimport { PopularTagsModule } from \"src/app/shared/modules/popularTags/popularTags.module\";\r\nimport { TagFeedComponent } from \"src/app/tagFeed/components/tagFeed/tagFeed.component\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"tags/:slug\",\r\n    component: TagFeedComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FeedModule,\r\n    BannerModule,\r\n    PopularTagsModule,\r\n    FeedTogglerModule\r\n  ],\r\n  declarations: [TagFeedComponent]\r\n})\r\nexport class TagFeedModule {\r\n\r\n}","import { Component, OnInit } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { getCurrentUserAction } from \"src/app/auth/store/actions/getCurrentUser.action\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\"\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n    this.store.dispatch(getCurrentUserAction());\n  }\n}\n","<mc-topBar></mc-topBar>\r\n  <router-outlet></router-outlet>","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { tap } from 'rxjs/operators';\r\nimport { catchError, map, switchMap } from \"rxjs/operators\";\r\nimport { AuthService } from \"src/app/auth/services/auth.service\";\r\nimport { loginAction, loginFailureAction, loginSuccessAction } from \"src/app/auth/store/actions/login.action\";\r\nimport { PersistanceService } from \"src/app/shared/services/persistence.service\";\r\nimport { CurrentUserInterface } from \"src/app/shared/types/currentUser.interface\";\r\n\r\n@Injectable()\r\nexport class LoginEffect {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private authService: AuthService,\r\n    private persistanceService: PersistanceService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  login$ = createEffect(() => this.actions$.pipe(\r\n    ofType(loginAction),\r\n    switchMap(({ request }) => {\r\n      return this.authService.login(request).pipe(\r\n        map((currentUser: CurrentUserInterface) => {\r\n          this.persistanceService.set('accessToken', currentUser.token);\r\n          return loginSuccessAction({ currentUser });\r\n        }),\r\n        catchError((errorResponse: HttpErrorResponse) => {\r\n          return of(loginFailureAction({ errors: errorResponse.error.errors }));\r\n        })\r\n      );\r\n    })\r\n  ))\r\n\r\n  redirectAfterSubmit$ = createEffect(() => this.actions$.pipe(\r\n    ofType(loginSuccessAction),\r\n    tap(() => {\r\n      this.router.navigateByUrl('/');\r\n    })\r\n  ), { dispatch: false })\r\n}","export enum ActionTypes {\r\n  GET_FEED = \"[Feed] Get feed\",\r\n  GET_FEED_SUCCESS = \"[Feed] Get feed success\",\r\n  GET_FEED_FAILURE = \"[Feed] Get feed failure\"\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { reducers } from \"src/app/editArticle/store/reducers\";\r\nimport { EditArticleService } from \"src/app/editArticle/services/editArticle.service\";\r\nimport { UpdateArticleEffect } from \"src/app/editArticle/store/effects/getArticle.effect\";\r\nimport { GetArticleEffect } from \"src/app/editArticle/store/effects/updateArticle.effect\";\r\nimport { ArticleFormModule } from \"src/app/shared/modules/articleForm/articleForm.module\";\r\nimport { ArticleService as SharedArticleService } from \"src/app/shared/services/article.service\";\r\nimport { LoadingModule } from \"src/app/shared/modules/loading/loading.module\";\r\nimport { EditArticleComponent } from \"src/app/editArticle/components/editArticle/editArticle.component\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"articles/:slug/edit\",\r\n    component: EditArticleComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ArticleFormModule,\r\n    EffectsModule.forFeature([GetArticleEffect, UpdateArticleEffect]),\r\n    StoreModule.forFeature(\"editArticle\", reducers),\r\n    LoadingModule\r\n  ],\r\n  declarations: [EditArticleComponent],\r\n  providers: [EditArticleService, SharedArticleService]\r\n})\r\nexport class EditArticleModule {}","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, map, switchMap } from \"rxjs/operators\";\r\nimport { getArticleAction, getArticleFailureAction, getArticleSuccessAction } from \"src/app/article/store/actions/getArticle.action\";\r\nimport { ArticleService as SharedArticleService } from \"src/app/shared/services/article.service\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\n\r\n@Injectable()\r\nexport class GetArticleEffect {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private sharedArticleService: SharedArticleService\r\n  ) { }\r\n\r\n  getArticle$ = createEffect(() => this.actions$.pipe(\r\n    ofType(getArticleAction),\r\n    switchMap(({ slug }) => {\r\n      return this.sharedArticleService.getArticle(slug).pipe(\r\n        map((article: ArticleInterface) => {\r\n          return getArticleSuccessAction({ article });\r\n        }),\r\n        catchError(() => {\r\n          return of(getArticleFailureAction());\r\n        })\r\n      );\r\n    })\r\n  ))\r\n}","export enum ActionTypes {\r\n  ADD_TO_FAVORITES = \"[Add to favorites] Add to favorites\",\r\n  ADD_TO_FAVORITES_SUCCESS = \"[Add to favorites] Add to favorites success\",\r\n  ADD_TO_FAVORITES_FAILURE = \"[Add to favorites] Add to favorites failure\"\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { ErrorMessageModule } from \"src/app/shared/modules/errorMessage/errorMessage.module\";\r\nimport { LoadingModule } from \"src/app/shared/modules/loading/loading.module\";\r\nimport { PopularTagsComponent } from \"src/app/shared/modules/popularTags/components/popularTags/popularTags.component\";\r\nimport { PopularTagsService } from \"src/app/shared/modules/popularTags/services/popularTags.service\";\r\nimport { GetPopularTagsEffect } from \"src/app/shared/modules/popularTags/store/effects/getPopularTags\";\r\nimport { reducers } from \"src/app/shared/modules/popularTags/store/reducers\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    StoreModule.forFeature('popularTags', reducers),\r\n    EffectsModule.forFeature([GetPopularTagsEffect]),\r\n    RouterModule,\r\n    LoadingModule,\r\n    ErrorMessageModule\r\n  ],\r\n  providers: [PopularTagsService],\r\n  declarations: [PopularTagsComponent],\r\n  exports: [PopularTagsComponent]\r\n})\r\nexport class PopularTagsModule {}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { LoginComponent } from \"src/app/auth/components/login/login.component\";\r\n\r\nimport { RegisterComponent } from \"src/app/auth/components/register/register.component\";\r\nimport { AuthService } from \"src/app/auth/services/auth.service\";\r\nimport { reducers } from \"src/app/auth/store/reducers\";\r\nimport { GetCurrentUserEffect } from \"src/app/auth/store/effects/getCurrentUser.effect\";\r\nimport { LoginEffect } from \"src/app/auth/store/effects/login.effect\";\r\nimport { RegisterEffect } from \"src/app/auth/store/effects/register.effect\";\r\nimport { UpdateCurrentUserEffect } from \"src/app/auth/store/effects/updateCurrentUser.effect\";\r\nimport { BackendErrorMessagesModule } from \"src/app/shared/modules/backendErrorMessages/backendErrorMessages.module\";\r\nimport { PersistanceService } from \"src/app/shared/services/persistence.service\";\r\nimport { LogoutEffect } from \"./store/effects/logout.effect\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"register\",\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: \"login\",\r\n    component: LoginComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    StoreModule.forFeature('auth', reducers),\r\n    EffectsModule.forFeature([\r\n      RegisterEffect,\r\n      LoginEffect,\r\n      GetCurrentUserEffect,\r\n      UpdateCurrentUserEffect,\r\n      LogoutEffect\r\n    ]),\r\n    BackendErrorMessagesModule\r\n  ],\r\n  providers: [AuthService, PersistanceService],\r\n  declarations: [RegisterComponent, LoginComponent]\r\n})\r\n\r\nexport class AuthModule {\r\n\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { TopBarComponent } from \"src/app/shared/modules/topBar/components/topBar/topBar.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule],\r\n  declarations: [TopBarComponent],\r\n  exports: [TopBarComponent]\r\n})\r\n\r\nexport class TopBarModule { }","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"src/app/app-routing.module\";\nimport { AppComponent } from \"src/app/app.component\";\nimport { AuthModule } from \"src/app/auth/auth.module\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\nimport { environment } from \"src/environments/environment\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { TopBarModule } from \"src/app/shared/modules/topBar/topBar.module\";\nimport { PersistanceService } from \"src/app/shared/services/persistence.service\";\nimport { AuthInterceprot } from \"src/app/shared/services/authInterceprot.service\";\nimport { GlobalFeedModule } from \"src/app/globalFeed/globalFeed.module\";\nimport { routerReducer, StoreRouterConnectingModule } from \"@ngrx/router-store\";\nimport { YourFeedModule } from \"src/app/yourFeed/yourFeed.module\";\nimport { TagFeedModule } from \"src/app/tagFeed/tagFeed.module\";\nimport { ArticleModule } from \"src/app/article/article.module\";\nimport { CreateArticleModule } from \"src/app/createArticle/createArticle.module\";\nimport { EditArticleModule } from \"src/app/editArticle/editArticle.module\";\nimport { SettingsModule } from \"src/app/settings/settings.module\";\nimport { UserProfileModule } from \"src/app/userProfile/userProfile.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AuthModule,\n    HttpClientModule,\n    StoreModule.forRoot({\n      router: routerReducer,\n    }),\n    EffectsModule.forRoot([]),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production\n    }),\n    StoreRouterConnectingModule.forRoot(),\n    TopBarModule,\n    GlobalFeedModule,\n    YourFeedModule,\n    TagFeedModule,\n    CreateArticleModule,\n    ArticleModule,\n    EditArticleModule,\n    SettingsModule,\n    UserProfileModule\n  ],\n  providers: [\n    PersistanceService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceprot,\n      multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { routerNavigatedAction, routerNavigationAction } from \"@ngrx/router-store\";\r\nimport { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { getFeedAction, getFeedFailureAction, getFeedSuccessAction } from \"src/app/shared/modules/feed/store/actions/getFeed.action\";\r\nimport { FeedStateInterface } from \"src/app/shared/modules/feed/types/feedState.inteface\";\r\n\r\nconst initialState: FeedStateInterface = {\r\n  isLoading: false,\r\n  error: null,\r\n  data: null\r\n}\r\n\r\nconst feedReducer = createReducer(\r\n  initialState,\r\n  on(\r\n    getFeedAction,\r\n    (state): FeedStateInterface => ({\r\n      ...state,\r\n      isLoading: true\r\n    })\r\n  ),\r\n  on(\r\n    getFeedSuccessAction,\r\n    (state, action): FeedStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.feed\r\n    })\r\n  ),\r\n  on(\r\n    getFeedFailureAction,\r\n    (state): FeedStateInterface => ({\r\n      ...state,\r\n      isLoading: false\r\n    })\r\n  ),\r\n  on(routerNavigationAction, (): FeedStateInterface => initialState)\r\n);\r\n\r\nexport function reducers(state: FeedStateInterface, action: Action) {\r\n  return feedReducer(state, action);\r\n}","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { AppStateInterface } from \"../../shared/types/appState.interface\";\r\nimport { UserProfileStateInterface } from \"../types/userProfileState.interface\";\r\n\r\nexport const userProfileFeatureSelector = createFeatureSelector<AppStateInterface, UserProfileStateInterface>('userProfile');\r\n\r\nexport const isLoadingSelector = createSelector(userProfileFeatureSelector, (userProfile: UserProfileStateInterface) => userProfile.isLoading);\r\n\r\nexport const errorSelector = createSelector(userProfileFeatureSelector, (userProfile: UserProfileStateInterface) => userProfile.error);\r\n\r\nexport const userProfileSelector = createSelector(userProfileFeatureSelector, (userProfile: UserProfileStateInterface) => userProfile.data);","import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"mc-error-message\",\r\n  template: \"<div>{{messageProps}}</div>\",\r\n})\r\nexport class ErrorMessageComponent {\r\n  @Input('message') messageProps: string = \"Something went wrong\";\r\n}","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"mc-loading\",\r\n  template: \"<div>Loading...</div>\",\r\n})\r\nexport class LoadingComponent {}","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { EditArticleStateInterface } from \"src/app/editArticle/types/editArticleState.interface\";\r\nimport { AppStateInterface } from \"src/app/shared/types/appState.interface\";\r\n\r\nexport const editArticleFeatureSelector = createFeatureSelector<AppStateInterface, EditArticleStateInterface>(\"editArticle\");\r\n\r\nexport const isSubmittingSelector = createSelector(\r\n  editArticleFeatureSelector, (editArticleState: EditArticleStateInterface) => editArticleState.isSubmitting);\r\n\r\nexport const isLoadingSelector = createSelector(\r\n  editArticleFeatureSelector, (editArticleState: EditArticleStateInterface) => editArticleState.isLoading);\r\n\r\nexport const validationErrorsSelector = createSelector(\r\n  editArticleFeatureSelector, (editArticleState: EditArticleStateInterface) => editArticleState.validationErrors);\r\n\r\nexport const articleSelector = createSelector(\r\n  editArticleFeatureSelector, (editArticleState: EditArticleStateInterface) => editArticleState.article);","import { createAction, props } from \"@ngrx/store\";\r\nimport { ActionTypes } from \"src/app/shared/modules/addToFavorites/store/actionTypes\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\n\r\nexport const addToFavoritesActions = createAction(\r\n  ActionTypes.ADD_TO_FAVORITES,\r\n  props<{isFavorited: boolean; slug: string}>()\r\n);\r\n\r\nexport const addToFavoritesSuccessAction = createAction(\r\n  ActionTypes.ADD_TO_FAVORITES_SUCCESS,\r\n  props<{article: ArticleInterface}>()\r\n);\r\n\r\nexport const addToFavoritesFailureAction = createAction(\r\n  ActionTypes.ADD_TO_FAVORITES_FAILURE\r\n);","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, map, switchMap } from \"rxjs/operators\";\r\nimport { AuthService } from \"src/app/auth/services/auth.service\";\r\nimport { updateCurrentUserAction, updateCurrentUserFailureAction, updateCurrentUserSuccessAction } from \"src/app/auth/store/actions/updateCurrentUser.action\";\r\nimport { CurrentUserInterface } from \"src/app/shared/types/currentUser.interface\";\r\n\r\n@Injectable()\r\nexport class UpdateCurrentUserEffect {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  updateCurrentUser$ = createEffect(() => this.actions$.pipe(\r\n    ofType(updateCurrentUserAction),\r\n    switchMap(({ currentUserInput }) => {\r\n      return this.authService.updateCurrentUser(currentUserInput).pipe(\r\n        map((currentUser: CurrentUserInterface) => {\r\n          return updateCurrentUserSuccessAction({ currentUser });\r\n        }),\r\n        catchError((errorResponse: HttpErrorResponse) => {\r\n          return of(updateCurrentUserFailureAction({ errors: errorResponse.error.errors }));\r\n        })\r\n      );\r\n    })\r\n  ));\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\nimport { GetArticleResponseInterface } from \"src/app/shared/types/getArticleResponse.interface\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n@Injectable()\r\nexport class ArticleService {\r\n  constructor(private http: HttpClient) {}\r\n  getArticle(slug: string | null): Observable<ArticleInterface> {\r\n    const fullUrl = `${environment.apiUrl}/articles/${slug}`;\r\n\r\n    return this.http.get<GetArticleResponseInterface>(fullUrl).pipe(map((response: GetArticleResponseInterface) => response.article));\r\n  }\r\n}","export enum ActionTypes {\r\n  GET_ARTICLE = \"[Feed] Get article\",\r\n  GET_ARTICLE_SUCCESS = \"[Feed] Get article success\",\r\n  GET_ARTICLE_FAILURE = \"[Feed] Get article failure\",\r\n  \r\n  DELETE_ARTICLE = \"[Feed] Delete article\",\r\n  DELETE_ARTICLE_SUCCESS = \"[Feed] Delete article success\",\r\n  DELETE_ARTICLE_FAILURE = \"[Feed] Delete article failure\"\r\n}","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { FeedStateInterface } from \"src/app/shared/modules/feed/types/feedState.inteface\";\r\nimport { AppStateInterface } from \"src/app/shared/types/appState.interface\";\r\n\r\nexport const feedFeatureSelector = createFeatureSelector<AppStateInterface, FeedStateInterface>('feed');\r\n\r\nexport const isLoadingSelector = createSelector(feedFeatureSelector, (feedState: FeedStateInterface) => feedState.isLoading);\r\n\r\nexport const errorSelector = createSelector(feedFeatureSelector, (feedState: FeedStateInterface) => feedState.error);\r\n\r\nexport const feedSelector = createSelector(feedFeatureSelector, (feedState: FeedStateInterface) => feedState.data);","import { routerNavigationAction } from \"@ngrx/router-store\";\r\nimport { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { getArticleAction, getArticleFailureAction, getArticleSuccessAction } from \"src/app/article/store/actions/getArticle.action\";\r\nimport { ArticleStateInterface } from \"src/app/article/types/articleState.inteface\";\r\n\r\nconst initialState: ArticleStateInterface = {\r\n  isLoading: false,\r\n  error: null,\r\n  data: null\r\n}\r\n\r\nconst articleReducer = createReducer(\r\n  initialState,\r\n  on(\r\n    getArticleAction,\r\n    (state): ArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: true\r\n    })\r\n  ),\r\n  on(\r\n    getArticleSuccessAction,\r\n    (state, action): ArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: action.article\r\n    })\r\n  ),\r\n  on(\r\n    getArticleFailureAction,\r\n    (state): ArticleStateInterface => ({\r\n      ...state,\r\n      isLoading: false\r\n    })\r\n  ),\r\n  on(routerNavigationAction, (): ArticleStateInterface => initialState)\r\n);\r\n\r\nexport function reducers(state: ArticleStateInterface, action: Action) {\r\n  return articleReducer(state, action);\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, map, switchMap } from \"rxjs/operators\";\r\nimport { FeedService } from \"src/app/shared/modules/feed/services/feed.service\";\r\nimport { getFeedAction, getFeedFailureAction, getFeedSuccessAction } from \"src/app/shared/modules/feed/store/actions/getFeed.action\";\r\nimport { GetFeedResponseInterface } from \"src/app/shared/modules/feed/types/getFeedResponse.interfece\";\r\n\r\n@Injectable()\r\nexport class GetFeedEffect {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private feedService: FeedService\r\n  ) { }\r\n\r\n  getFeed$ = createEffect(() => this.actions$.pipe(\r\n    ofType(getFeedAction),\r\n    switchMap(({url}) => {\r\n      return this.feedService.getFeed(url).pipe(\r\n        map((feed: GetFeedResponseInterface) => {\r\n          return getFeedSuccessAction({ feed });\r\n        }),\r\n        catchError(() => {\r\n          return of(getFeedFailureAction());\r\n        })\r\n      );\r\n    })\r\n  ));\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { BackendErrorMessagesComponent } from \"src/app/shared/modules/backendErrorMessages/components/backendErrorMessages.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [BackendErrorMessagesComponent],\r\n  exports: [BackendErrorMessagesComponent]\r\n})\r\n\r\nexport class BackendErrorMessagesModule { }","import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { catchError, map, switchMap } from \"rxjs/operators\";\r\nimport { getArticleAction, getArticleFailureAction, getArticleSuccessAction } from \"src/app/article/store/actions/getArticle.action\";\r\nimport { ArticleService as SharedArticleService } from \"src/app/shared/services/article.service\";\r\nimport { ArticleInterface } from \"src/app/shared/types/article.interface\";\r\n\r\n@Injectable()\r\nexport class GetArticleEffect {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private sharedArticleService: SharedArticleService\r\n  ) { }\r\n\r\n  getArticle$ = createEffect(() => this.actions$.pipe(\r\n    ofType(getArticleAction),\r\n    switchMap(({slug}) => {\r\n      return this.sharedArticleService.getArticle(slug).pipe(\r\n        map((article: ArticleInterface) => {\r\n          return getArticleSuccessAction({ article });\r\n        }),\r\n        catchError(() => {\r\n          return of(getArticleFailureAction());\r\n        })\r\n      );\r\n    })\r\n  ));\r\n}","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class UtilService {\r\n  range(start: number, end: number): number[] {\r\n    return [...Array(end).keys()].map(el => el + start);\r\n  }\r\n}","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { AuthStateInterface } from \"src/app/auth/types/authState.interface\";\r\nimport { AppStateInterface } from \"src/app/shared/types/appState.interface\";\r\n\r\nexport const authFeatureSelector = createFeatureSelector<AppStateInterface, AuthStateInterface>('auth');\r\n\r\nexport const isSubmittingSelector = createSelector(authFeatureSelector, (authState: AuthStateInterface) => authState.isSubmitting);\r\n\r\nexport const validationErrorsSelector = createSelector(authFeatureSelector, (authState: AuthStateInterface) => authState.validationErrors);\r\n\r\nexport const isLoggedInSelector = createSelector(authFeatureSelector, (authState: AuthStateInterface) => authState.isLoggedIn);\r\n\r\nexport const isAnonymousSelector = createSelector(authFeatureSelector, (authState: AuthStateInterface) => authState.isLoggedIn === false);\r\n\r\nexport const currentUserSelector = createSelector(authFeatureSelector, (authState: AuthStateInterface) => authState.currentUser);","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ErrorMessageComponent } from \"src/app/shared/modules/errorMessage/components/errorMessage/errorMessage.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [ErrorMessageComponent],\r\n  exports: [ErrorMessageComponent]\r\n})\r\n\r\nexport class ErrorMessageModule {\r\n  \r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { currentUserSelector, isAnonymousSelector, isLoggedInSelector } from \"src/app/auth/store/selectors\";\r\nimport { CurrentUserInterface } from \"src/app/shared/types/currentUser.interface\";\r\n\r\n@Component({\r\n  selector: \"mc-topBar\",\r\n  templateUrl: \"./topBar.component.html\",\r\n  styleUrls: [\"./topBar.component.scss\"]\r\n})\r\n\r\nexport class TopBarComponent implements OnInit {\r\n  isLoggedIn$!: Observable<boolean | null>;\r\n  isAnonymous$!: Observable<boolean>;\r\n  currentUser$!: Observable<CurrentUserInterface | null>;\r\n\r\n  constructor(private store: Store) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn$ = this.store.pipe(select(isLoggedInSelector));\r\n    this.isAnonymous$ = this.store.pipe(select(isAnonymousSelector));\r\n    this.currentUser$ = this.store.pipe(select(currentUserSelector));\r\n  }\r\n}","<nav class=\"navbar navbar-light\">\r\n  <div class=\"container\">\r\n    <a [routerLink]=\"['/']\" class=\"navbar-brand\">medium</a>\r\n    <ul class=\"nav navbar-nav pull-xs-right\">\r\n      <li class=\"nav-item\">\r\n        <a [routerLink]=\"['/']\" class=\"nav-link\">Home</a>\r\n      </li>\r\n      <ng-container *ngIf=\"isLoggedIn$ | async\">\r\n        <li class=\"nav-item\">\r\n          <a [routerLink]=\"['/articles/new']\" class=\"nav-link\">\r\n            <i class=\"ion-compose\"></i>\r\n            &nbsp; New Post\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a [routerLink]=\"['/settings']\" class=\"nav-link\">\r\n            <i class=\"ion-gear-a\"></i>\r\n            &nbsp; Settings\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a [routerLink]=\"['/profiles', (currentUser$ | async)!.username]\" class=\"nav-link\">\r\n            <img [src]=\"(currentUser$ | async)!.image\" alt=\"user picture\" class=\"user-pic\">\r\n            &nbsp; {{(currentUser$ | async)!.username}}\r\n          </a>\r\n        </li>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"isAnonymous$ | async\">\r\n        <li class=\"nav-item\">\r\n          <a [routerLink]=\"['/login']\" class=\"nav-link\">\r\n            Sign In\r\n          </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a [routerLink]=\"['/register']\" class=\"nav-link\">\r\n            Sign Up\r\n          </a>\r\n        </li>\r\n      </ng-container>\r\n    </ul>\r\n  </div>\r\n</nav>","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { PersistanceService } from \"src/app/shared/services/persistence.service\";\r\nimport { logoutAction } from \"../sync.action\";\r\n\r\n@Injectable()\r\nexport class LogoutEffect {\r\n  logout$ = createEffect(\r\n    () => this.actions$.pipe(\r\n      ofType(logoutAction),\r\n      tap(() => {\r\n        this.persistanceService.set(\"accessToken\", \"\");\r\n        this.router.navigateByUrl(\"/\");\r\n      })\r\n    ),\r\n    {dispatch: false}\r\n  );\r\n  constructor(private actions$: Actions, private persistanceService: PersistanceService, private router: Router) {}\r\n}","export enum ActionTypes {\r\n  GET_USER_PROFILE = \"['User profile'] Get user profile\",\r\n  GET_USER_PROFILE_SUCCESS = \"[User profile] Get user profile success\",\r\n  GET_USER_PROFILE_FAILURE = \"[User profile] Get user profile failure\",\r\n}","import { Injectable } from \"@angular/core\";\r\n\r\n\r\n@Injectable()\r\nexport class PersistanceService {\r\n  set(key: string, data: any): void {\r\n    try {\r\n      localStorage.setItem(key, JSON.stringify(data));\r\n    } catch (error) {\r\n      console.error('Error saving to localStorage', error);\r\n    }\r\n  }\r\n\r\n  get(key: string): any {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(key)!);\r\n    } catch (error) {\r\n      console.error(\"Error getting data from localStorage\", error);\r\n      return null;\r\n    }\r\n  }\r\n}","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"mc-your-feed\",\r\n  templateUrl: \"./yourFeed.component.html\",\r\n  styleUrls: [\"./yourFeed.component.scss\"]\r\n})\r\nexport class YourFeedComponent {\r\n  apiUrl = \"/articles/feed\";\r\n}","<div class=\"home-page\">\r\n  <mc-banner></mc-banner>\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-9\">\r\n        <mc-feed-toggler></mc-feed-toggler>\r\n        <mc-feed [apiUrl]=\"apiUrl\"></mc-feed>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <mc-popular-tags></mc-popular-tags>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChange, SimpleChanges } from \"@angular/core\";\r\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { Observable, Subscription } from \"rxjs\";\r\nimport { getFeedAction } from \"src/app/shared/modules/feed/store/actions/getFeed.action\";\r\nimport { errorSelector, feedSelector, isLoadingSelector } from \"src/app/shared/modules/feed/store/selectors\";\r\nimport { GetFeedResponseInterface } from \"src/app/shared/modules/feed/types/getFeedResponse.interfece\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { parseUrl, stringify } from \"query-string\";\r\n\r\n@Component({\r\n  selector: \"mc-feed\",\r\n  templateUrl: \"./feed.component.html\",\r\n  styleUrls: [\"./feed.component.scss\"]\r\n})\r\nexport class FeedComponent implements OnInit, OnDestroy, OnChanges {\r\n  @Input('apiUrl') apiUrlProps!: string;\r\n\r\n  isLoading$!: Observable<boolean>;\r\n  error$!: Observable<string | null>;\r\n  feed$!: Observable<GetFeedResponseInterface | null>;\r\n  limit = environment.limit;\r\n  baseUrl!: string;\r\n  queryParamsSubscription!: Subscription;\r\n  currentPage!: number;\r\n\r\n  constructor(private store: Store, private router: Router, private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeValues();\r\n    this.initializeListeners();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.queryParamsSubscription.unsubscribe();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const isApiUrlChanged = !changes.apiUrlProps.firstChange && changes.apiUrlProps.currentValue !== changes.apiUrlProps.previousValue;\r\n    if (isApiUrlChanged) {\r\n      this.fetchFeed();\r\n    }\r\n  }\r\n\r\n  initializeValues(): void {\r\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector));\r\n    this.error$ = this.store.pipe(select(errorSelector));\r\n    this.feed$ = this.store.pipe(select(feedSelector));\r\n    this.baseUrl = this.router.url.split('?')[0];\r\n  }\r\n\r\n  initializeListeners(): void {\r\n    this.queryParamsSubscription = this.route.queryParams.subscribe((params: Params) => {\r\n      this.currentPage = Number(params.page || \"1\");\r\n      this.fetchFeed();\r\n    });\r\n  }\r\n\r\n  fetchFeed(): void {\r\n    const offset = this.currentPage * this.limit - this.limit;\r\n    const parsedUrl = parseUrl(this.apiUrlProps); \r\n    const stringifiedParams = stringify({\r\n      limit: this.limit,\r\n      offset,\r\n      ...parsedUrl.query\r\n    });\r\n    const apiUrlWithParams = `${parsedUrl.url}?&${stringifiedParams}`\r\n    this.store.dispatch(getFeedAction({url: apiUrlWithParams}));\r\n  }\r\n}","<mc-loading *ngIf=\"isLoading$ | async\"></mc-loading>\r\n<mc-error-message *ngIf=\"error$ | async\"></mc-error-message>\r\n\r\n<div *ngIf=\"feed$ | async\">\r\n  <div class=\"article-preview\" *ngFor=\"let article of (feed$ | async)?.articles\">\r\n    <div class=\"article-meta\">\r\n      <a [routerLink]=\"['/profiles', article.author.username]\">\r\n        <img [src]=\"article.author.image\" alt=\"Author image\">\r\n      </a>\r\n      <div class=\"info\">\r\n        <a [routerLink]=\"['/profiles', article.author.username]\">\r\n          {{ article.author.username }}\r\n        </a>\r\n        <span class=\"date\">{{ article.createdAt }}</span>\r\n      </div>\r\n      <div class=\"pull-xs-right\">\r\n        <mc-add-to-favorites\r\n          [isFavorited]=\"article.favorited\"\r\n          [articleSlug]=\"article.slug\"\r\n          [favoritesCount]=\"article.favoritesCount\"\r\n        ></mc-add-to-favorites>\r\n      </div>\r\n    </div>\r\n    <a [routerLink]=\"['/articles', article.slug]\" class=\"preview-link\">\r\n      <h1>{{article.title}}</h1>\r\n      <p>{{article.description}}</p>\r\n      <mc-tag-list [tags]=\"article.tagList\"></mc-tag-list>\r\n    </a>\r\n  </div>\r\n  <mc-pagination\r\n    [total]=\"(feed$ | async)?.articlesCount\"\r\n    [limit]=\"limit\"\r\n    [url]=\"baseUrl\"\r\n    [currentPage]=\"currentPage\"\r\n  ></mc-pagination>\r\n</div>","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { ArticleComponent } from \"src/app/article/components/article/article.component\";\r\nimport { ArticleService } from \"src/app/article/services/article.service\";\r\nimport { DeleteArticleEffect } from \"src/app/article/store/effects/deleteArticle.effect\";\r\nimport { GetArticleEffect } from \"src/app/article/store/effects/getArticle.effect\";\r\nimport { reducers } from \"src/app/article/store/reducers\";\r\nimport { ErrorMessageModule } from \"src/app/shared/modules/errorMessage/errorMessage.module\";\r\nimport { LoadingModule } from \"src/app/shared/modules/loading/loading.module\";\r\nimport { TagListModule } from \"src/app/shared/modules/tagList/tagList.module\";\r\nimport { ArticleService as SharedArticleService } from \"src/app/shared/services/article.service\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"articles/:slug\",\r\n    component: ArticleComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ErrorMessageModule,\r\n    LoadingModule,\r\n    EffectsModule.forFeature([GetArticleEffect, DeleteArticleEffect]),\r\n    StoreModule.forFeature('article', reducers),\r\n    RouterModule.forChild(routes),\r\n    TagListModule\r\n  ],\r\n  declarations: [ArticleComponent],\r\n  exports: [],\r\n  providers: [SharedArticleService, ArticleService]\r\n})\r\nexport class ArticleModule {\r\n\r\n}","import { createAction, props } from \"@ngrx/store\";\r\nimport { ActionTypes } from \"src/app/shared/modules/feed/store/actionTypes\";\r\nimport { GetFeedResponseInterface } from \"src/app/shared/modules/feed/types/getFeedResponse.interfece\";\r\n\r\nexport const getFeedAction = createAction(\r\n  ActionTypes.GET_FEED, \r\n  props<{url: string}>()\r\n)\r\n\r\nexport const getFeedSuccessAction = createAction(\r\n  ActionTypes.GET_FEED_SUCCESS, \r\n  props<{feed: GetFeedResponseInterface}>()\r\n)\r\n\r\nexport const getFeedFailureAction = createAction(\r\n  ActionTypes.GET_FEED_FAILURE\r\n)","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"mc-global-feed\",\r\n  templateUrl: \"./globalFeed.component.html\",\r\n  styleUrls: [\"./globalFeed.component.scss\"]\r\n})\r\nexport class GlobalFeedComponent {\r\n  apiUrl = \"/articles\";\r\n}","<div class=\"home-page\">\r\n  <mc-banner></mc-banner>\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-9\">\r\n        <mc-feed-toggler></mc-feed-toggler>\r\n        <mc-feed [apiUrl]=\"apiUrl\"></mc-feed>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <mc-popular-tags></mc-popular-tags>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","export enum ActionTypes {\r\n  GET_POPULAR_TASGS = \"[PopularTags] Get popular tags\",\r\n  GET_POPULAR_TASGS_SUCCESS = \"[PopularTags] Get popular tags success\",\r\n  GET_POPULAR_TASGS_FAILURE = \"[PopularTags] Get popular tags failure\"\r\n}","import { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { updateCurrentUserAction, updateCurrentUserFailureAction, updateCurrentUserSuccessAction } from \"src/app/auth/store/actions/updateCurrentUser.action\";\r\nimport { SettingsStateInterface } from \"src/app/settings/types/settingsState.interface\";\r\n\r\nconst initialState: SettingsStateInterface = {\r\n  isSubmitting: false,\r\n  validationErrors: null\r\n}\r\n\r\nconst settingsReducer = createReducer(\r\n  initialState,\r\n  on(\r\n    updateCurrentUserAction,\r\n    (state): SettingsStateInterface => ({\r\n      ...state,\r\n      isSubmitting: true\r\n  })),\r\n  on(\r\n    updateCurrentUserSuccessAction,\r\n    (state): SettingsStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false\r\n  })),\r\n  on(\r\n    updateCurrentUserFailureAction,\r\n    (state, action): SettingsStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      validationErrors: action.errors\r\n  }))\r\n);\r\n\r\nexport function reducers(state: SettingsStateInterface, action: Action) {\r\n  return settingsReducer(state, action)\r\n}","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { createAction, props } from \"@ngrx/store\";\r\nimport { ActionTypes } from \"src/app/auth/store/actionTypes\";\r\nimport { LoginRequestInterface } from \"src/app/auth/types/loginRequest.interface\";\r\nimport { BackendErrorsInterface } from \"src/app/shared/types/backendErrors.interface\";\r\nimport { CurrentUserInterface } from \"src/app/shared/types/currentUser.interface\";\r\n\r\nexport const loginAction = createAction(\r\n  ActionTypes.LOGIN,\r\n  props<{ request: LoginRequestInterface }>()\r\n);\r\n\r\nexport const loginSuccessAction = createAction(\r\n  ActionTypes.LOGIN_SUCCESS,\r\n  props<{ currentUser: CurrentUserInterface }>()\r\n);\r\n\r\nexport const loginFailureAction = createAction(\r\n  ActionTypes.LOGIN_FAILURE,\r\n  props<{ errors: BackendErrorsInterface }>()\r\n);","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { of } from \"rxjs\";\r\nimport { tap } from 'rxjs/operators';\r\nimport { catchError, map, switchMap } from \"rxjs/operators\";\r\nimport { AuthService } from \"src/app/auth/services/auth.service\";\r\nimport { registerAction, registerFailureAction, registerSuccessAction } from \"src/app/auth/store/actions/register.action\";\r\nimport { PersistanceService } from \"src/app/shared/services/persistence.service\";\r\nimport { CurrentUserInterface } from \"src/app/shared/types/currentUser.interface\";\r\n\r\n@Injectable()\r\nexport class RegisterEffect {\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private authService: AuthService,\r\n    private persistanceService: PersistanceService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  register$ = createEffect(() => this.actions$.pipe(\r\n    ofType(registerAction),\r\n    switchMap(({ request }) => {\r\n      return this.authService.register(request).pipe(\r\n        map((currentUser: CurrentUserInterface) => {\r\n          this.persistanceService.set('accessToken', currentUser.token);\r\n          return registerSuccessAction({ currentUser });\r\n        }),\r\n        catchError((errorResponse: HttpErrorResponse) => {\r\n          return of(registerFailureAction({ errors: errorResponse.error.errors }));\r\n        })\r\n      );\r\n    })\r\n  ))\r\n\r\n  redirectAfterSubmit$ = createEffect(() => this.actions$.pipe(\r\n    ofType(registerSuccessAction),\r\n    tap(() => {\r\n      this.router.navigateByUrl('/');\r\n    })\r\n  ), { dispatch: false })\r\n}","import { state } from \"@angular/animations\";\r\nimport { Action, createReducer, on } from \"@ngrx/store\";\r\nimport { createArticleAction, createArticleFailureAction, createArticleSuccessAction } from \"src/app/createArticle/store/actions/createArticle.action\";\r\nimport { CreateArticleStateInterface } from \"src/app/createArticle/types/createArticleState.interface\";\r\n\r\nconst intialState: CreateArticleStateInterface = {\r\n  isSubmitting: false,\r\n  validationErrors: null\r\n}\r\n\r\nconst createArticleReducer = createReducer(\r\n  intialState,\r\n  on(\r\n    createArticleAction,\r\n    (state): CreateArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: true\r\n    })\r\n  ),\r\n  on(\r\n    createArticleSuccessAction,\r\n    (state): CreateArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false\r\n    })\r\n  ),\r\n  on(\r\n    createArticleFailureAction,\r\n    (state, action): CreateArticleStateInterface => ({\r\n      ...state,\r\n      isSubmitting: false,\r\n      validationErrors: action.errors\r\n    })\r\n  )\r\n)\r\n\r\nexport const reducers = (state: CreateArticleStateInterface, action: Action) => {\r\n  return createArticleReducer(state, action);\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { EffectsModule } from \"@ngrx/effects\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { AddToFavoritesModule } from \"src/app/shared/modules/addToFavorites/addToFavorites.module\";\r\nimport { ErrorMessageModule } from \"src/app/shared/modules/errorMessage/errorMessage.module\";\r\nimport { FeedComponent } from \"src/app/shared/modules/feed/components/feed/feed.component\";\r\nimport { FeedService } from \"src/app/shared/modules/feed/services/feed.service\";\r\nimport { GetFeedEffect } from \"src/app/shared/modules/feed/store/effects/getFeed.effect\";\r\nimport { reducers } from \"src/app/shared/modules/feed/store/reducers\";\r\nimport { LoadingModule } from \"src/app/shared/modules/loading/loading.module\";\r\nimport { PaginationModule } from \"src/app/shared/modules/pagination/pagination.module\";\r\nimport { TagListModule } from \"src/app/shared/modules/tagList/tagList.module\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ErrorMessageModule,\r\n    LoadingModule,\r\n    PaginationModule,\r\n    EffectsModule.forFeature([GetFeedEffect]),\r\n    StoreModule.forFeature('feed', reducers),\r\n    TagListModule,\r\n    AddToFavoritesModule\r\n  ],\r\n  declarations: [FeedComponent],\r\n  exports: [FeedComponent],\r\n  providers: [FeedService]\r\n})\r\nexport class FeedModule {\r\n\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"src/app/auth/services/auth.service\";\r\nimport { registerAction } from \"src/app/auth/store/actions/register.action\";\r\nimport { isSubmittingSelector, validationErrorsSelector } from \"src/app/auth/store/selectors\";\r\nimport { RegisterRequestInterface } from \"src/app/auth/types/registerRequest.interface\";\r\nimport { BackendErrorsInterface } from \"src/app/shared/types/backendErrors.interface\";\r\n\r\n@Component({\r\n  selector: \"mc-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  styleUrls: [\"./register.component.scss\"]\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n  public form!: FormGroup;\r\n  isSubmitting$!: Observable<boolean>;\r\n  backendErrors$!: Observable<BackendErrorsInterface | null>\r\n\r\n  constructor(private fb: FormBuilder, private store: Store, private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.initializeValues();\r\n  }\r\n\r\n  initializeValues(): void {\r\n    this.isSubmitting$ = this.store.pipe(select(isSubmittingSelector));\r\n    this.backendErrors$ = this.store.pipe(select(validationErrorsSelector))\r\n  }\r\n\r\n  initializeForm(): void {\r\n    this.form = this.fb.group({\r\n      username: ['', Validators.required],\r\n      email: '',\r\n      password: ''\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const request: RegisterRequestInterface = {\r\n      user: this.form.value\r\n    }\r\n    this.store.dispatch(registerAction({ request }));\r\n  }\r\n}","<div class=\"auth-page\">\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n        <h1 class=\"text-xs-center\">Sigh Up</h1>\r\n          <p class=\"text-xs-center\">\r\n            <a [routerLink]=\"['/login']\">Have an account?</a>\r\n          </p>\r\n          <mc-backend-error-messages\r\n            *ngIf=\"backendErrors$ | async\"\r\n            [backendErrors]=\"backendErrors$ | async\">\r\n          </mc-backend-error-messages>\r\n          <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n            <fieldset>\r\n              <fieldset class=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control form-control-lg\"\r\n                  placeholder=\"Username\"\r\n                  formControlName=\"username\"\r\n                >\r\n              </fieldset>\r\n              <fieldset class=\"form-group\">\r\n                <input\r\n                type=\"email\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Email\"\r\n                formControlName=\"email\"\r\n              >\r\n              </fieldset>\r\n              <fieldset class=\"form-group\">\r\n                <input\r\n                type=\"password\"\r\n                class=\"form-control form-control-lg\"\r\n                placeholder=\"Password\"\r\n                formControlName=\"password\"\r\n              >\r\n              </fieldset>\r\n              <button class=\"btn btn-lg btn-primary pull-xs-right\" type=\"submit\"\r\n              [disabled]=\"isSubmitting$ | async\">Sign Up</button>\r\n            </fieldset>\r\n          </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"mc-banner\",\r\n  templateUrl: \"./banner.component.html\",\r\n  styleUrls: [\"./banner.component.scss\"]\r\n})\r\nexport class BannerComponent {\r\n  \r\n}","<div class=\"banner\">\r\n  <div class=\"container\">\r\n    <h1>Medium</h1>\r\n    <p>A place to share knowladge</p>\r\n  </div>\r\n</div>","import { createAction, props } from \"@ngrx/store\";\r\n\r\nimport { ActionTypes } from \"src/app/auth/store/actionTypes\";\r\nimport { RegisterRequestInterface } from \"src/app/auth/types/registerRequest.interface\";\r\nimport { BackendErrorsInterface } from \"src/app/shared/types/backendErrors.interface\";\r\nimport { CurrentUserInterface } from \"src/app/shared/types/currentUser.interface\";\r\n\r\nexport const registerAction = createAction(\r\n  ActionTypes.REGISTER,\r\n  props<{ request: RegisterRequestInterface }>()\r\n);\r\n\r\nexport const registerSuccessAction = createAction(\r\n  ActionTypes.REGISTER_SUCCESS,\r\n  props<{ currentUser: CurrentUserInterface }>()\r\n);\r\n\r\nexport const registerFailureAction = createAction(\r\n  ActionTypes.REGISTER_FAILURE,\r\n  props<{ errors: BackendErrorsInterface }>()\r\n);","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { select, Store } from \"@ngrx/store\";\r\nimport { Observable } from \"rxjs\";\r\nimport { getPopularTagsAction } from \"src/app/shared/modules/popularTags/store/actions/getPopularTags.action\";\r\nimport { errorSelector, isLoadingSelector, popularTagsSelector } from \"src/app/shared/modules/popularTags/store/selectors\";\r\nimport { PopularTagType } from \"src/app/shared/types/popularTag.type\";\r\n\r\n@Component({\r\n  selector: \"mc-popular-tags\",\r\n  templateUrl: \"./popularTags.component.html\"\r\n})\r\nexport class PopularTagsComponent implements OnInit {\r\n  popularTags$!: Observable<PopularTagType[] | null>;\r\n  isLoading$!: Observable<boolean>;\r\n  error$!: Observable<string | null>;\r\n\r\n  constructor (private store: Store) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeValues();\r\n    this.fetchData();\r\n  }\r\n\r\n  initializeValues(): void {\r\n    this.popularTags$ = this.store.pipe(select(popularTagsSelector));\r\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector));\r\n    this.error$ = this.store.pipe(select(errorSelector));\r\n  }\r\n\r\n  fetchData(): void {\r\n    this.store.dispatch(getPopularTagsAction());\r\n  }\r\n}","<mc-loading *ngIf=\"isLoading$ | async\"></mc-loading>\r\n<mc-error-message *ngIf=\"error$ | async\"></mc-error-message>\r\n\r\n<div class=\"sidebar\" *ngIf=\"popularTags$ | async\">\r\n  <p>Popular Tags</p>\r\n  <div class=\"tag-list\">\r\n    <a\r\n      *ngFor=\"let popularTag of popularTags$ | async\"\r\n      [routerLink]=\"['/tags', popularTag]\"\r\n      class=\"tag-default tag-pill\"\r\n    >\r\n      {{popularTag}}\r\n    </a>\r\n  </div>\r\n</div>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}